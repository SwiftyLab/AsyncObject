{"seeAlsoSections":[{"title":"Synchronization Primitives","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSemaphore"}],"title":"AsyncSemaphore","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:12AsyncObjects0A9SemaphoreC","modules":[{"name":"AsyncObjects"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSemaphore"}]},"abstract":[{"type":"text","text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore."}],"sections":[],"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","doc:\/\/AsyncObjects\/s8SendableP","doc:\/\/AsyncObjects\/ScA","doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/init(value:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/signal(file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(file:function:line:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/AsyncObject-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/asyncobjects\/asyncsemaphore"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSemaphore"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An async semaphore is an efficient implementation of a traditional counting semaphore."},{"type":"text","text":" "},{"type":"text","text":"Unlike traditional semaphore, async semaphore suspends current task instead of blocking threads."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You increment a semaphore count by calling the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/signal(file:function:line:)"},{"type":"text","text":" method"},{"type":"text","text":" "},{"type":"text","text":"and decrement a semaphore count by calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(file:function:line:)"},{"type":"text","text":" method"},{"type":"text","text":" "},{"type":"text","text":"or its timeout variation "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(until:tolerance:clock:file:function:line:)"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ create limiting concurrent access count","let semaphore = AsyncSemaphore(value: 1)","\/\/ wait for semaphore access,","\/\/ fails only if task cancelled","try await semaphore.wait()","\/\/ or wait with some timeout","try await semaphore.wait(forNanoseconds: 1_000_000_000)","\/\/ release after executing critical async tasks","defer { semaphore.signal() }"]}]}],"references":{"doc://AsyncObjects/documentation/AsyncObjects/AsyncObject":{"role":"symbol","title":"AsyncObject","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncObject"}],"abstract":[{"type":"text","text":"An object type that can provide synchronization across multiple task contexts"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncObject"}],"url":"\/documentation\/asyncobjects\/asyncobject"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent":{"role":"symbol","title":"AsyncCountdownEvent","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCountdownEvent"}],"abstract":[{"type":"text","text":"An event object that controls access to a resource between high and low priority tasks"},{"type":"text","text":" "},{"type":"text","text":"and signals when count is within limit."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncCountdownEvent"}],"url":"\/documentation\/asyncobjects\/asynccountdownevent"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent":{"role":"symbol","title":"AsyncEvent","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncEvent"}],"abstract":[{"type":"text","text":"An object that controls execution of tasks depending on the signal state."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncEvent"}],"url":"\/documentation\/asyncobjects\/asyncevent"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/AsyncObject-Implementations":{"role":"collectionGroup","title":"AsyncObject Implementations","abstract":[],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/AsyncObject-Implementations","kind":"article","type":"topic","url":"\/documentation\/asyncobjects\/asyncsemaphore\/asyncobject-implementations"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/signal(file:function:line:)":{"role":"symbol","title":"signal(file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Signals (increments) a semaphore."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/signal(file:function:line:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asyncsemaphore\/signal(file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/wait(until:tolerance:clock:file:function:line:)":{"role":"symbol","title":"wait(until:tolerance:clock:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Instant"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Instant"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Waits for the object to green light task execution within the deadline."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(until:tolerance:clock:file:function:line:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asyncsemaphore\/wait(until:tolerance:clock:file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects":{"role":"collection","title":"AsyncObjects","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/wait(file:function:line:)":{"role":"symbol","title":"wait(file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Waits for, or decrements, a semaphore."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(file:function:line:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asyncsemaphore\/wait(file:function:line:)"},"doc://AsyncObjects/12_Concurrency8AnyActorP":{"type":"unresolvable","title":"_Concurrency.AnyActor","identifier":"doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"},"doc://AsyncObjects/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/AsyncObjects\/s8SendableP"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/init(value:)":{"role":"symbol","title":"init(value:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates new counting semaphore with an initial value."},{"type":"text","text":" "},{"type":"text","text":"By default, initial value is zero."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/init(value:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asyncsemaphore\/init(value:)"},"doc://AsyncObjects/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/AsyncObjects\/ScA"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore":{"role":"symbol","title":"AsyncSemaphore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSemaphore"}],"abstract":[{"type":"text","text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSemaphore"}],"url":"\/documentation\/asyncobjects\/asyncsemaphore"}}}