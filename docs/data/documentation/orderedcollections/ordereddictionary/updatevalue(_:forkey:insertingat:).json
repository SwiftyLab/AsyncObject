{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"externalParam","text":"insertingAt"},{"kind":"text","text":" "},{"kind":"internalParam","text":"index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> (originalMember"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?, index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A pair "},{"code":"(old, index)","type":"codeVoice"},{"type":"text","text":", where "},{"code":"old","type":"codeVoice"},{"type":"text","text":" is the value that was"},{"type":"text","text":" "},{"type":"text","text":"replaced, or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if a new key-value pair was added, and "},{"code":"index","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"is the index corresponding to the updated (or inserted) value."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"content":[{"inlineContent":[{"text":"The new value to add to the dictionary.","type":"text"}],"type":"paragraph"}],"name":"value"},{"content":[{"inlineContent":[{"text":"The key to associate with ","type":"text"},{"code":"value","type":"codeVoice"},{"text":". If ","type":"text"},{"code":"key","type":"codeVoice"},{"text":" already exists in","type":"text"},{"text":" ","type":"text"},{"text":"the dictionary, ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" replaces the existing associated value. If","type":"text"},{"text":" ","type":"text"},{"code":"key","type":"codeVoice"},{"text":" isn’t already a key of the dictionary, the ","type":"text"},{"code":"(key, value)","type":"codeVoice"},{"text":" pair","type":"text"},{"text":" ","type":"text"},{"text":"is inserted.","type":"text"}],"type":"paragraph"}],"name":"key"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The index at which to insert the key, if it doesn’t already","type":"text"},{"text":" ","type":"text"},{"text":"exist.","type":"text"}]}],"name":"index"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method instead of key-based subscripting when you need to insert"},{"type":"text","text":" "},{"type":"text","text":"new keys at a particular index. You can use the return value to"},{"type":"text","text":" "},{"type":"text","text":"determine whether or not the new value supplanted the value of an existing"},{"type":"text","text":" "},{"type":"text","text":"key."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the value of an existing key is updated,"},{"type":"text","text":" "},{"type":"codeVoice","code":"updateValue(_:forKey:insertingAt:)"},{"type":"text","text":" returns the original value and its"},{"type":"text","text":" "},{"type":"text","text":"index."}]},{"code":["var hues: OrderedDictionary = [","    \"Heliotrope\": 296,","    \"Coral\": 16,","    \"Aquamarine\": 156]","let newIndex = hues.startIndex","let (old, index) =","    hues.updateValue(18, forKey: \"Coral\", insertingAt: newIndex)","if let old = old {","    print(\"The value '\\(old)' at offset \\(index.offset) was replaced.\")","}","\/\/ Prints \"The value '16' at offset 1 was replaced.\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the given key is not present in the dictionary, this method inserts the"},{"type":"text","text":" "},{"type":"text","text":"key-value pair at the specified index and returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"code":["let (old, index) =","    hues.updateValue(330, forKey: \"Cerise\", insertingAt: newIndex)","if let old = old {","    print(\"The value '\\(old)' at offset \\(index.offset) was replaced.\")","} else {","    print(\"A new value was inserted at offset \\(index.offset).\")","}","\/\/ Prints \"A new value was inserted at offset 0.\")"],"syntax":null,"type":"codeListing"},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"code":"count","type":"codeVoice"},{"text":")","type":"text"}],"type":"paragraph"}],"name":"Complexity"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(_:forkey:insertingat:)"]}],"identifier":{"url":"doc:\/\/OrderedCollections\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(_:forKey:insertingAt:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","externalID":"s:18OrderedCollections0A10DictionaryV11updateValue_6forKey11insertingAtq_Sg14originalMember_Si5indextq__xSitF","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"externalParam","text":"insertingAt"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> (originalMember"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?, index"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"title":"updateValue(_:forKey:insertingAt:)","modules":[{"name":"OrderedCollections"}],"extendedModule":"OrderedCollections"},"hierarchy":{"paths":[["doc:\/\/OrderedCollections\/documentation\/OrderedCollections","doc:\/\/OrderedCollections\/documentation\/OrderedCollections\/OrderedDictionary"]]},"abstract":[{"type":"text","text":"Updates the value stored in the dictionary for the given key, or inserts a"},{"type":"text","text":" "},{"type":"text","text":"new key-value pair at the specified index if the key does not exist."}],"schemaVersion":{"patch":0,"major":0,"minor":2},"sections":[],"references":{"doc://OrderedCollections/documentation/OrderedCollections":{"kind":"symbol","role":"collection","identifier":"doc:\/\/OrderedCollections\/documentation\/OrderedCollections","title":"OrderedCollections","url":"\/documentation\/orderedcollections","type":"topic","abstract":[]},"doc://OrderedCollections/documentation/OrderedCollections/OrderedDictionary/updateValue(_:forKey:insertingAt:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/OrderedCollections\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(_:forKey:insertingAt:)","kind":"symbol","type":"topic","url":"\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(_:forkey:insertingat:)","title":"updateValue(_:forKey:insertingAt:)","role":"symbol","abstract":[{"text":"Updates the value stored in the dictionary for the given key, or inserts a","type":"text"},{"text":" ","type":"text"},{"text":"new key-value pair at the specified index if the key does not exist.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"insertingAt","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> (originalMember","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?, index","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}]},"doc://OrderedCollections/documentation/OrderedCollections/OrderedDictionary":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OrderedDictionary"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OrderedDictionary"}],"identifier":"doc:\/\/OrderedCollections\/documentation\/OrderedCollections\/OrderedDictionary","title":"OrderedDictionary","url":"\/documentation\/orderedcollections\/ordereddictionary","type":"topic","abstract":[{"type":"text","text":"An ordered collection of key-value pairs."}]}}}