{"identifier":{"url":"doc:\/\/AsyncObject\/documentation\/AsyncObject","interfaceLanguage":"swift"},"abstract":[{"text":"Several synchronization primitives introduced to aid in modern swift concurrency. The primitives are very similar to those used in other operating systems including mutexes, condition variables, shared\/exclusive locks, and semaphores.","type":"text"}],"schemaVersion":{"major":0,"minor":2,"patch":0},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Synchronization Primitives","identifiers":["doc:\/\/AsyncObject\/documentation\/AsyncObject\/AsyncSemaphore"]},{"title":"Enumerations","identifiers":["doc:\/\/AsyncObject\/documentation\/AsyncObject\/TaskTimeoutResult"]}],"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Several synchronization primitives introduced to aid in modern swift concurrency. The primitives are very similar to those used in other operating systems including mutexes, condition variables, shared\/exclusive locks, and semaphores."}]}]}],"metadata":{"roleHeading":"Framework","title":"AsyncObject","role":"collection","symbolKind":"module","modules":[{"name":"AsyncObject"}],"externalID":"AsyncObject"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobject"]}],"references":{"doc://AsyncObject/documentation/AsyncObject/AsyncSemaphore":{"abstract":[{"text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AsyncSemaphore","kind":"identifier"}],"identifier":"doc:\/\/AsyncObject\/documentation\/AsyncObject\/AsyncSemaphore","type":"topic","title":"AsyncSemaphore","url":"\/documentation\/asyncobject\/asyncsemaphore","navigatorTitle":[{"text":"AsyncSemaphore","kind":"identifier"}]},"doc://AsyncObject/documentation/AsyncObject/TaskTimeoutResult":{"identifier":"doc:\/\/AsyncObject\/documentation\/AsyncObject\/TaskTimeoutResult","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"TaskTimeoutResult","kind":"identifier"}],"title":"TaskTimeoutResult","abstract":[{"type":"text","text":"A result value indicating whether a task finished before a specified time."}],"navigatorTitle":[{"text":"TaskTimeoutResult","kind":"identifier"}],"type":"topic","url":"\/documentation\/asyncobject\/tasktimeoutresult"},"doc://AsyncObject/documentation/AsyncObject":{"identifier":"doc:\/\/AsyncObject\/documentation\/AsyncObject","kind":"symbol","role":"collection","title":"AsyncObject","abstract":[{"type":"text","text":"Several synchronization primitives introduced to aid in modern swift concurrency. The primitives are very similar to those used in other operating systems including mutexes, condition variables, shared\/exclusive locks, and semaphores."}],"type":"topic","url":"\/documentation\/asyncobject"}}}