{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Returns current instance that’s a copy of the receiver.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Locker"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"copy"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"zone"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSZone","preciseIdentifier":"s:10Foundation6NSZoneV"},{"kind":"text","text":"? = nil) -> "},{"kind":"keyword","text":"Any"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"Returns current instance object.","type":"text"}],"type":"paragraph"}]},{"parameters":[{"name":"zone","content":[{"inlineContent":[{"text":"This parameter is ignored. Memory zones","type":"text"},{"text":" ","type":"text"},{"text":"are no longer used by Objective-C.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"Implementation provided to help to track locking status","type":"text"},{"text":" ","type":"text"},{"text":"for threads for the current lock object.","type":"text"}],"type":"paragraph"}]}],"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"copy"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation6NSZoneV","text":"NSZone","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Any","kind":"keyword"}],"symbolKind":"method","modules":[{"name":"AsyncObjects"}],"role":"symbol","externalID":"s:12AsyncObjects6LockerC4copy4withyp10Foundation6NSZoneVSg_tF","title":"copy(with:)"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/locker\/copy(with:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Locker\/copy(with:)"},"references":{"doc://AsyncObjects/documentation/AsyncObjects":{"abstract":[{"text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency.","type":"text"}],"role":"collection","title":"AsyncObjects","url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/Locker/copy(with:)":{"role":"symbol","title":"copy(with:)","type":"topic","kind":"symbol","url":"\/documentation\/asyncobjects\/locker\/copy(with:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"copy"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation6NSZoneV","text":"NSZone"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"Any"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Locker\/copy(with:)","abstract":[{"text":"Returns current instance that’s a copy of the receiver.","type":"text"}]},"doc://AsyncObjects/documentation/AsyncObjects/Locker":{"type":"topic","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Locker","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Locker"}],"url":"\/documentation\/asyncobjects\/locker","abstract":[{"type":"text","text":"A synchronization object that can be used to provide exclusive access to threads."}],"title":"Locker","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Locker"}],"kind":"symbol"}}}