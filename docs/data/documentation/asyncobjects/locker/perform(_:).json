{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"perform"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"critical"},{"kind":"text","text":": () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result from the critical task."}]}]},{"kind":"parameters","parameters":[{"name":"critical","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The critical task to perform."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this to perform critical tasks or provide access to critical resource"},{"type":"text","text":" "},{"type":"text","text":"that require exclusivity among other concurrent tasks."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method checks if thread has already acquired lock and performs task"},{"type":"text","text":" "},{"type":"text","text":"without releasing the lock. This allows safer lock management eliminating"},{"type":"text","text":" "},{"type":"text","text":"potential runtime errors."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Error occurred running critical task."}]}],"type":"aside","name":"Throws"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/asyncobjects\/locker\/perform(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Locker\/perform(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Performs a critical piece of work synchronously after acquiring the lock"},{"type":"text","text":" "},{"type":"text","text":"and releases lock when task completes."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"perform"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"}],"title":"perform(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:12AsyncObjects6LockerC7performyxxyKXEKlF","modules":[{"name":"AsyncObjects"}]},"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Locker"]]},"references":{"doc://AsyncObjects/documentation/AsyncObjects/Locker":{"role":"symbol","title":"Locker","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Locker"}],"abstract":[{"type":"text","text":"A synchronization object that can be used to provide exclusive access to threads."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Locker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Locker"}],"url":"\/documentation\/asyncobjects\/locker"},"doc://AsyncObjects/documentation/AsyncObjects/Locker/perform(_:)":{"role":"symbol","title":"perform(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"perform"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"}],"abstract":[{"type":"text","text":"Performs a critical piece of work synchronously after acquiring the lock"},{"type":"text","text":" "},{"type":"text","text":"and releases lock when task completes."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Locker\/perform(_:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/locker\/perform(_:)"},"doc://AsyncObjects/documentation/AsyncObjects":{"role":"collection","title":"AsyncObjects","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects"}}}