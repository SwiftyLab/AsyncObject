{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/taskoperation\/cancel()"]}],"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"()"}],"symbolKind":"method","title":"cancel()","role":"symbol","roleHeading":"Instance Method","externalID":"s:12AsyncObjects13TaskOperationC6cancelyyF","modules":[{"name":"AsyncObjects"}]},"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskOperation"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"override","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Initiates cooperative cancellation for provided asynchronous operation"},{"type":"text","text":" "},{"type":"text","text":"and moves to finished state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling this method on a task that doesnâ€™t support cancellation has no effect."},{"type":"text","text":" "},{"type":"text","text":"Likewise, if the task has already run past the last point where it would stop early,"},{"type":"text","text":" "},{"type":"text","text":"calling this method has no effect."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskOperation\/cancel()"},"abstract":[{"type":"text","text":"Advises the operation object that it should stop executing its task."}],"references":{"doc://AsyncObjects/documentation/AsyncObjects":{"abstract":[{"text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency.","type":"text"}],"role":"collection","title":"AsyncObjects","url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/TaskOperation/cancel()":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Advises the operation object that it should stop executing its task."}],"kind":"symbol","url":"\/documentation\/asyncobjects\/taskoperation\/cancel()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskOperation\/cancel()","title":"cancel()"},"doc://AsyncObjects/documentation/AsyncObjects/TaskOperation":{"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"An object that bridges asynchronous work under structured concurrency","type":"text"},{"text":" ","type":"text"},{"text":"to Grand Central Dispatch (GCD or ","type":"text"},{"code":"libdispatch","type":"codeVoice"},{"text":") as ","type":"text"},{"code":"Operation","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"TaskOperation","kind":"identifier"}],"url":"\/documentation\/asyncobjects\/taskoperation","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskOperation","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskOperation","kind":"identifier"}],"title":"TaskOperation"}}}