{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/asyncevent"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncEvent","kind":"identifier"}]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An async event suspends tasks if current state is non-signaled and resumes execution when event is signalled."}]},{"type":"paragraph","inlineContent":[{"text":"You can signal event by calling the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/signal(file:function:line:)"},{"text":" ","type":"text"},{"type":"text","text":"method and reset signal by calling "},{"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/reset(file:function:line:)","isActive":true},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Wait for event signal by calling "},{"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/wait(file:function:line:)","isActive":true},{"type":"text","text":" "},{"type":"text","text":"method or its timeout variation "},{"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/wait(until:tolerance:clock:file:function:line:)","isActive":true},{"type":"text","text":":"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ create event with initial state (signalled or not)","let event = AsyncEvent(signaledInitially: false)","\/\/ wait for event to be signalled,","\/\/ fails only if task cancelled","try await event.wait()","\/\/ or wait with some timeout","try await event.wait(forNanoseconds: 1_000_000_000)","","\/\/ signal event after completing some task","event.signal()"]}]}],"abstract":[{"type":"text","text":"An object that controls execution of tasks depending on the signal state."}],"seeAlsoSections":[{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent"],"generated":true,"title":"Synchronization Primitives"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent"},"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects"]]},"relationshipsSections":[{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","doc:\/\/AsyncObjects\/s23CustomStringConvertibleP","doc:\/\/AsyncObjects\/s8SendableP","doc:\/\/AsyncObjects\/ScA","doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"kind":"symbol","metadata":{"symbolKind":"class","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncEvent","kind":"identifier"}],"externalID":"s:12AsyncObjects0A5EventC","modules":[{"name":"AsyncObjects"}],"roleHeading":"Class","title":"AsyncEvent","navigatorTitle":[{"text":"AsyncEvent","kind":"identifier"}]},"topicSections":[{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/init(signaledInitially:)"],"title":"Initializers"},{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/reset(file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/signal(file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/wait(file:function:line:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/AsyncObject-Implementations","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/CustomStringConvertible-Implementations"],"generated":true,"title":"Default Implementations"}],"references":{"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent/AsyncObject-Implementations":{"title":"AsyncObject Implementations","kind":"article","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/AsyncObject-Implementations","role":"collectionGroup","url":"\/documentation\/asyncobjects\/asyncevent\/asyncobject-implementations","type":"topic","abstract":[]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent/reset(file:function:line:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","title":"reset(file:function:line:)","url":"\/documentation\/asyncobjects\/asyncevent\/reset(file:function:line:)","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/reset(file:function:line:)","abstract":[{"type":"text","text":"Resets signal of event."}]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncObject":{"abstract":[{"type":"text","text":"An object type that can provide synchronization across multiple task contexts"}],"navigatorTitle":[{"text":"AsyncObject","kind":"identifier"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","url":"\/documentation\/asyncobjects\/asyncobject","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncObject","kind":"identifier"}],"type":"topic","role":"symbol","title":"AsyncObject","kind":"symbol"},"doc://AsyncObjects/12_Concurrency8AnyActorP":{"type":"unresolvable","title":"_Concurrency.AnyActor","identifier":"doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"},"doc://AsyncObjects/documentation/AsyncObjects":{"abstract":[{"text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency.","type":"text"}],"role":"collection","title":"AsyncObjects","url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent/signal(file:function:line:)":{"url":"\/documentation\/asyncobjects\/asyncevent\/signal(file:function:line:)","title":"signal(file:function:line:)","abstract":[{"type":"text","text":"Signals the event."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/signal(file:function:line:)","type":"topic","kind":"symbol","role":"symbol"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncEvent","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncEvent","kind":"identifier"}],"kind":"symbol","type":"topic","title":"AsyncEvent","url":"\/documentation\/asyncobjects\/asyncevent","abstract":[{"type":"text","text":"An object that controls execution of tasks depending on the signal state."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent/wait(file:function:line:)":{"title":"wait(file:function:line:)","url":"\/documentation\/asyncobjects\/asyncevent\/wait(file:function:line:)","type":"topic","abstract":[{"type":"text","text":"Waits for event signal, or proceeds if already signalled."}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/wait(file:function:line:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSemaphore","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSemaphore","kind":"identifier"}],"kind":"symbol","type":"topic","title":"AsyncSemaphore","url":"\/documentation\/asyncobjects\/asyncsemaphore","abstract":[{"type":"text","text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore"},"doc://AsyncObjects/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/AsyncObjects\/s8SendableP","type":"unresolvable"},"doc://AsyncObjects/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/AsyncObjects\/ScA"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent/CustomStringConvertible-Implementations":{"title":"CustomStringConvertible Implementations","kind":"article","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/CustomStringConvertible-Implementations","role":"collectionGroup","url":"\/documentation\/asyncobjects\/asyncevent\/customstringconvertible-implementations","type":"topic","abstract":[]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent/wait(until:tolerance:clock:file:function:line:)":{"title":"wait(until:tolerance:clock:file:function:line:)","kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/wait(until:tolerance:clock:file:function:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"until","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Instant"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Instant"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","url":"\/documentation\/asyncobjects\/asyncevent\/wait(until:tolerance:clock:file:function:line:)","type":"topic","abstract":[{"type":"text","text":"Waits for the object to green light task execution within the deadline."}]},"doc://AsyncObjects/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/AsyncObjects\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent/init(signaledInitially:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"signaledInitially","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","title":"init(signaledInitially:)","url":"\/documentation\/asyncobjects\/asyncevent\/init(signaledinitially:)","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent\/init(signaledInitially:)","abstract":[{"type":"text","text":"Creates a new event with signal state provided."},{"type":"text","text":" "},{"type":"text","text":"By default, event is initially in signalled state."}]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncCountdownEvent","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncCountdownEvent","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent","title":"AsyncCountdownEvent","role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent","abstract":[{"text":"An event object that controls access to a resource between high and low priority tasks","type":"text"},{"text":" ","type":"text"},{"text":"and signals when count is within limit.","type":"text"}]}}}