{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fulfill","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"result","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC","kind":"typeIdentifier","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"FutureResult","preciseIdentifier":"s:12AsyncObjects6FutureC0C6Resulta","kind":"typeIdentifier","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/FutureResult"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#fileID","kind":"keyword"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#function","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"text":")","kind":"text"}],"platforms":["Linux"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The result. If it contains a "},{"type":"codeVoice","code":".success"},{"type":"text","text":" value,"},{"type":"text","text":" "},{"type":"text","text":"that value delivered asynchronously to callers;"},{"type":"text","text":" "},{"type":"text","text":"otherwise, the awaiting caller receives the "},{"type":"codeVoice","code":".error"},{"type":"text","text":" instead."}]}],"name":"result"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The file future fulfillment originates from (there’s usually no need to pass it","type":"text"},{"text":" ","type":"text"},{"text":"explicitly as it defaults to ","type":"text"},{"type":"codeVoice","code":"#fileID"},{"text":").","type":"text"}]}],"name":"file"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The function future fulfillment originates from (there’s usually no need to"},{"type":"text","text":" "},{"type":"text","text":"pass it explicitly as it defaults to "},{"type":"codeVoice","code":"#function"},{"type":"text","text":")."}]}],"name":"function"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The line future fulfillment originates from (there’s usually no need to pass it","type":"text"},{"text":" ","type":"text"},{"text":"explicitly as it defaults to ","type":"text"},{"code":"#line","type":"codeVoice"},{"text":").","type":"text"}]}],"name":"line"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"A future must be fulfilled exactly once. If the future has already been fulfilled,","type":"text"},{"text":" ","type":"text"},{"text":"then calling this method has no effect and returns immediately.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fulfill"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12AsyncObjects6FutureC","text":"Future"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:12AsyncObjects6FutureC0C6Resulta","text":"FutureResult","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:12AsyncObjects6FutureC7fulfill4with4file8function4lineys6ResultOyxq_G_S2SSutF","title":"fulfill(with:file:function:line:)","symbolKind":"method","role":"symbol","modules":[{"name":"AsyncObjects"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/future\/fulfill(with:file:function:line:)"]}],"sections":[],"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/fulfill(with:file:function:line:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Fulfill the future by returning or throwing the given result value."}],"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://AsyncObjects/documentation/AsyncObjects/Future/FutureResult":{"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A type that represents the result in the future, when an element or error is available.","type":"text"}],"navigatorTitle":[{"text":"FutureResult","kind":"identifier"}],"url":"\/documentation\/asyncobjects\/future\/futureresult","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/FutureResult","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FutureResult","kind":"identifier"}],"title":"Future.FutureResult"},"doc://AsyncObjects/documentation/AsyncObjects/Future":{"abstract":[{"text":"An object that eventually produces a single value and then finishes or fails.","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Future","kind":"identifier"}],"title":"Future","navigatorTitle":[{"text":"Future","kind":"identifier"}],"url":"\/documentation\/asyncobjects\/future","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future","kind":"symbol","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/Future/fulfill(with:file:function:line:)":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/asyncobjects\/future\/fulfill(with:file:function:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fulfill"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"FutureResult","preciseIdentifier":"s:12AsyncObjects6FutureC0C6Resulta"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"title":"fulfill(with:file:function:line:)","abstract":[{"text":"Fulfill the future by returning or throwing the given result value.","type":"text"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/fulfill(with:file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects":{"abstract":[{"text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency.","type":"text"}],"role":"collection","title":"AsyncObjects","url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic"}}}