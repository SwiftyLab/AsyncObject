{"sections":[],"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future"]]},"variants":[{"paths":["\/documentation\/asyncobjects\/future\/race(_:file:function:line:)-2txs9"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"AsyncObjects","roleHeading":"Type Method","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"race","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:12AsyncObjects6FutureC","text":"Future","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">..., ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"Future","kind":"typeIdentifier","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Failure","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Never","type":"codeVoice"},{"type":"text","text":"."}]},"title":"race(_:file:function:line:)","externalID":"s:12AsyncObjects6FutureCAAs5NeverORs_rlE4race_4file8function4lineACyxAEGAJd_S2SSutFZ","modules":[{"name":"AsyncObjects"}],"role":"symbol"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"race","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"futures","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC","kind":"typeIdentifier","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">..., ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#fileID","kind":"keyword"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#function","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"text":") -> ","kind":"text"},{"text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC","kind":"typeIdentifier","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A pending future combining provided futures, or a forever pending future"},{"type":"text","text":" "},{"type":"text","text":"if no future provided."}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The futures to combine.","type":"text"}],"type":"paragraph"}],"name":"futures"},{"content":[{"inlineContent":[{"text":"The file future initialization originates from (there’s usually no need to pass it","type":"text"},{"text":" ","type":"text"},{"text":"explicitly as it defaults to ","type":"text"},{"type":"codeVoice","code":"#fileID"},{"text":").","type":"text"}],"type":"paragraph"}],"name":"file"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The function future initialization originates from (there’s usually no need to","type":"text"},{"text":" ","type":"text"},{"text":"pass it explicitly as it defaults to ","type":"text"},{"type":"codeVoice","code":"#function"},{"text":").","type":"text"}]}],"name":"function"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The line future initialization originates from (there’s usually no need to pass it"},{"type":"text","text":" "},{"type":"text","text":"explicitly as it defaults to "},{"code":"#line","type":"codeVoice"},{"type":"text","text":")."}]}],"name":"line"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the returned future fulfills, it is fulfilled with the value of the first future that fulfilled."}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Takes multiple futures and, returns a single future that fulfills with the value"},{"type":"text","text":" "},{"type":"text","text":"as soon as any of the futures is fulfilled."}],"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/race(_:file:function:line:)-2txs9","interfaceLanguage":"swift"},"references":{"doc://AsyncObjects/documentation/AsyncObjects/Future":{"abstract":[{"text":"An object that eventually produces a single value and then finishes or fails.","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Future","kind":"identifier"}],"title":"Future","navigatorTitle":[{"text":"Future","kind":"identifier"}],"url":"\/documentation\/asyncobjects\/future","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future","kind":"symbol","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects":{"abstract":[{"text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency.","type":"text"}],"role":"collection","title":"AsyncObjects","url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/Future/race(_:file:function:line:)-2txs9":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"race"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:12AsyncObjects6FutureC","text":"Future"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">..., "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Failure","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","type":"topic","title":"race(_:file:function:line:)","url":"\/documentation\/asyncobjects\/future\/race(_:file:function:line:)-2txs9","abstract":[{"type":"text","text":"Takes multiple futures and, returns a single future that fulfills with the value"},{"type":"text","text":" "},{"type":"text","text":"as soon as any of the futures is fulfilled."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/race(_:file:function:line:)-2txs9"}}}