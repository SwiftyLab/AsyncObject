{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#fileID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#function"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The new initial count."}],"type":"paragraph"}],"name":"count"},{"content":[{"inlineContent":[{"type":"text","text":"The file reset originates from (there’s usually no need to pass it"},{"type":"text","text":" "},{"type":"text","text":"explicitly as it defaults to "},{"code":"#fileID","type":"codeVoice"},{"type":"text","text":")."}],"type":"paragraph"}],"name":"file"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The function reset originates from (there’s usually no need to","type":"text"},{"text":" ","type":"text"},{"text":"pass it explicitly as it defaults to ","type":"text"},{"code":"#function","type":"codeVoice"},{"text":").","type":"text"}]}],"name":"function"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The line reset originates from (there’s usually no need to pass it","type":"text"},{"text":" ","type":"text"},{"text":"explicitly as it defaults to ","type":"text"},{"type":"codeVoice","code":"#line"},{"text":").","type":"text"}]}],"name":"line"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"If the current count becomes less or equal to limit, multiple queued tasks","type":"text"},{"text":" ","type":"text"},{"text":"are resumed from suspension until current count exceeds limit.","type":"text"}],"type":"paragraph"}]}],"metadata":{"title":"reset(to:file:function:line:)","role":"symbol","symbolKind":"method","modules":[{"name":"AsyncObjects"}],"externalID":"s:12AsyncObjects0A14CountdownEventC5reset2to4file8function4lineySuSg_S2SSutF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}]},"variants":[{"paths":["\/documentation\/asyncobjects\/asynccountdownevent\/reset(to:file:function:line:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/reset(to:file:function:line:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Resets initial count and current count to specified value.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/reset(to:file:function:line:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/reset(to:file:function:line:)","title":"reset(to:file:function:line:)","abstract":[{"text":"Resets initial count and current count to specified value.","type":"text"}],"kind":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/reset(to:file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects":{"abstract":[{"text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency.","type":"text"}],"role":"collection","title":"AsyncObjects","url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncCountdownEvent","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncCountdownEvent","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent","title":"AsyncCountdownEvent","role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent","abstract":[{"text":"An event object that controls access to a resource between high and low priority tasks","type":"text"},{"text":" ","type":"text"},{"text":"and signals when count is within limit.","type":"text"}]}}}