{"abstract":[{"type":"text","text":"Cancel continuation by resuming with cancellation error."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/continuable\/cancel()-46gpe"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"()"}]}]}],"kind":"symbol","sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"()"}],"role":"symbol","extendedModule":"AsyncObjects","symbolKind":"method","title":"cancel()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"roleHeading":"Instance Method","externalID":"s:12AsyncObjects11ContinuablePAAs5Error_p7FailureRtzrlE6cancelyyF","modules":[{"name":"AsyncObjects"}]},"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/cancel()-46gpe"},"references":{"doc://AsyncObjects/documentation/AsyncObjects":{"abstract":[{"text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency.","type":"text"}],"role":"collection","title":"AsyncObjects","url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/Continuable":{"title":"Continuable","url":"\/documentation\/asyncobjects\/continuable","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Continuable","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"A type that allows to interface between synchronous and asynchronous code,","type":"text"},{"text":" ","type":"text"},{"text":"by representing task state and allowing task resuming with some value or error.","type":"text"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable","navigatorTitle":[{"text":"Continuable","kind":"identifier"}]},"doc://AsyncObjects/documentation/AsyncObjects/Continuable/cancel()-46gpe":{"abstract":[{"type":"text","text":"Cancel continuation by resuming with cancellation error."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Failure","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/asyncobjects\/continuable\/cancel()-46gpe","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/cancel()-46gpe","title":"cancel()"}}}