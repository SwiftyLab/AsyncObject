{"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(file:function:line:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@Sendable","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#fileID","kind":"keyword"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#function","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"name":"file","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The file wait request originates from (there’s usually no need to pass it"},{"type":"text","text":" "},{"type":"text","text":"explicitly as it defaults to "},{"type":"codeVoice","code":"#fileID"},{"type":"text","text":")."}]}]},{"name":"function","content":[{"inlineContent":[{"text":"The function wait request originates from (there’s usually no need to","type":"text"},{"text":" ","type":"text"},{"text":"pass it explicitly as it defaults to ","type":"text"},{"code":"#function","type":"codeVoice"},{"text":").","type":"text"}],"type":"paragraph"}]},{"name":"line","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The line wait request originates from (there’s usually no need to pass it"},{"type":"text","text":" "},{"type":"text","text":"explicitly as it defaults to "},{"type":"codeVoice","code":"#line"},{"type":"text","text":")."}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Decrement the counting semaphore. If the resulting value is less than zero,"},{"type":"text","text":" "},{"type":"text","text":"current task is suspended until a signal occurs."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"CancellationError"},{"type":"text","text":" if cancelled."}]}],"name":"Throws","type":"aside","style":"note"}],"kind":"content"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol","symbolKind":"method","title":"wait(file:function:line:)","roleHeading":"Instance Method","externalID":"s:12AsyncObjects0A9SemaphoreC4wait4file8function4lineySS_SSSutYaYbKF","modules":[{"name":"AsyncObjects"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/asyncsemaphore\/wait(file:function:line:)"]}],"abstract":[{"type":"text","text":"Waits for, or decrements, a semaphore."}],"references":{"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSemaphore","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSemaphore","kind":"identifier"}],"kind":"symbol","type":"topic","title":"AsyncSemaphore","url":"\/documentation\/asyncobjects\/asyncsemaphore","abstract":[{"type":"text","text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore"},"doc://AsyncObjects/documentation/AsyncObjects":{"abstract":[{"text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency.","type":"text"}],"role":"collection","title":"AsyncObjects","url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/wait(file:function:line:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","type":"topic","title":"wait(file:function:line:)","url":"\/documentation\/asyncobjects\/asyncsemaphore\/wait(file:function:line:)","abstract":[{"type":"text","text":"Waits for, or decrements, a semaphore."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(file:function:line:)"}}}