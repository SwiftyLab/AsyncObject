{"seeAlsoSections":[{"title":"Synchronization Primitives","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCountdownEvent"}],"title":"AsyncCountdownEvent","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:12AsyncObjects0A14CountdownEventC","modules":[{"name":"AsyncObjects"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncCountdownEvent"}]},"abstract":[{"type":"text","text":"An event object that controls access to a resource between high and low priority tasks"},{"type":"text","text":" "},{"type":"text","text":"and signals when count is within limit."}],"sections":[],"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","doc:\/\/AsyncObjects\/s8SendableP","doc:\/\/AsyncObjects\/ScA","doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/init(until:initial:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/currentCount","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/initialCount","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/isSet","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/limit"]},{"title":"Instance Methods","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/increment(by:file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/reset(to:file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(repeat:file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(file:function:line:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/AsyncObject-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/asyncobjects\/asynccountdownevent"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCountdownEvent"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An async countdown event is an inverse of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"in the sense that instead of restricting access to a resource,"},{"type":"text","text":" "},{"type":"text","text":"it notifies when the resource usage is idle or inefficient."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can indicate high priority usage of resource by using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/increment(by:file:function:line:)"},{"type":"text","text":" "},{"type":"text","text":"method, and indicate free of resource by calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(repeat:file:function:line:)"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(file:function:line:)"},{"type":"text","text":" methods."},{"type":"text","text":" "},{"type":"text","text":"For low priority resource usage or detect resource idling use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(file:function:line:)"},{"type":"text","text":" "},{"type":"text","text":"method or its timeout variation "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(until:tolerance:clock:file:function:line:)"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ create event with initial count and count down limit","let event = AsyncCountdownEvent()","\/\/ increment countdown count from high priority tasks","event.increment(by: 1)","","\/\/ wait for countdown signal from low priority tasks,","\/\/ fails only if task cancelled","try await event.wait()","\/\/ or wait with some timeout","try await event.wait(forNanoseconds: 1_000_000_000)","","\/\/ signal countdown after completing high priority tasks","event.signal()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/limit"},{"type":"text","text":" parameter to indicate concurrent low priority usage, i.e. if limit set to zero,"},{"type":"text","text":" "},{"type":"text","text":"only one low priority usage allowed at one time."}]}]}],"references":{"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/limit":{"role":"symbol","title":"limit","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"}],"abstract":[{"type":"text","text":"The limit up to which the countdown counts and triggers event."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/limit","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/limit"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/signal(file:function:line:)":{"role":"symbol","title":"signal(file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Registers a signal (decrements) with the countdown event."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(file:function:line:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/signal(file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/init(until:initial:)":{"role":"symbol","title":"init(until:initial:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initial"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates new countdown event with the limit count down up to and an initial count."},{"type":"text","text":" "},{"type":"text","text":"By default, both limit and initial count are zero."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/init(until:initial:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/init(until:initial:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/isSet":{"role":"symbol","title":"isSet","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isSet"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Indicates whether countdown event current count is within "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/limit"},{"type":"text","text":"."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/isSet","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/isset"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/reset(to:file:function:line:)":{"role":"symbol","title":"reset(to:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Resets initial count and current count to specified value."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/reset(to:file:function:line:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/reset(to:file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncObject":{"role":"symbol","title":"AsyncObject","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncObject"}],"abstract":[{"type":"text","text":"An object type that can provide synchronization across multiple task contexts"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncObject"}],"url":"\/documentation\/asyncobjects\/asyncobject"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore":{"role":"symbol","title":"AsyncSemaphore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSemaphore"}],"abstract":[{"type":"text","text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSemaphore"}],"url":"\/documentation\/asyncobjects\/asyncsemaphore"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/wait(file:function:line:)":{"role":"symbol","title":"wait(file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Waits for, or increments, a countdown event."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(file:function:line:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/wait(file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent":{"role":"symbol","title":"AsyncEvent","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncEvent"}],"abstract":[{"type":"text","text":"An object that controls execution of tasks depending on the signal state."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncEvent"}],"url":"\/documentation\/asyncobjects\/asyncevent"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/increment(by:file:function:line:)":{"role":"symbol","title":"increment(by:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"increment"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Increments the countdown event current count by the specified value."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/increment(by:file:function:line:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/increment(by:file:function:line:)"},"doc://AsyncObjects/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/AsyncObjects\/s8SendableP"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/AsyncObject-Implementations":{"role":"collectionGroup","title":"AsyncObject Implementations","abstract":[],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/AsyncObject-Implementations","kind":"article","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/asyncobject-implementations"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent":{"role":"symbol","title":"AsyncCountdownEvent","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCountdownEvent"}],"abstract":[{"type":"text","text":"An event object that controls access to a resource between high and low priority tasks"},{"type":"text","text":" "},{"type":"text","text":"and signals when count is within limit."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncCountdownEvent"}],"url":"\/documentation\/asyncobjects\/asynccountdownevent"},"doc://AsyncObjects/12_Concurrency8AnyActorP":{"type":"unresolvable","title":"_Concurrency.AnyActor","identifier":"doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"},"doc://AsyncObjects/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/AsyncObjects\/ScA"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/currentCount":{"role":"symbol","title":"currentCount","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"currentCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"}],"abstract":[{"type":"text","text":"Current count of the countdown."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/currentCount","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/currentcount"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/signal(repeat:file:function:line:)":{"role":"symbol","title":"signal(repeat:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"repeat"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Registers multiple signals (decrements by provided count) with the countdown event."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(repeat:file:function:line:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/signal(repeat:file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/wait(until:tolerance:clock:file:function:line:)":{"role":"symbol","title":"wait(until:tolerance:clock:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Instant"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Instant"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Waits for the object to green light task execution within the deadline."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(until:tolerance:clock:file:function:line:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/wait(until:tolerance:clock:file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects":{"role":"collection","title":"AsyncObjects","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/initialCount":{"role":"symbol","title":"initialCount","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"initialCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"}],"abstract":[{"type":"text","text":"Initial count of the countdown when count started."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/initialCount","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/initialcount"}}}