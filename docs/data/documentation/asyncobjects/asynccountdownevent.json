{"metadata":{"roleHeading":"Class","modules":[{"name":"AsyncObjects"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncCountdownEvent"}],"externalID":"s:12AsyncObjects0A14CountdownEventC","title":"AsyncCountdownEvent","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCountdownEvent"}],"symbolKind":"class"},"variants":[{"paths":["\/documentation\/asyncobjects\/asynccountdownevent"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/init(until:initial:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/currentCount","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/initialCount","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/isSet","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/limit"]},{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/increment(by:file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/reset(to:file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(repeat:file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(file:function:line:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/AsyncObject-Implementations","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/CustomStringConvertible-Implementations"],"title":"Default Implementations","generated":true}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent"],"title":"Synchronization Primitives","generated":true}],"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncCountdownEvent"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"An async countdown event is an inverse of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"in the sense that instead of restricting access to a resource,","type":"text"},{"text":" ","type":"text"},{"text":"it notifies when the resource usage is idle or inefficient.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"You can indicate high priority usage of resource by using ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/increment(by:file:function:line:)"},{"text":" ","type":"text"},{"text":"method, and indicate free of resource by calling ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(repeat:file:function:line:)"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(file:function:line:)"},{"text":" methods.","type":"text"},{"text":" ","type":"text"},{"text":"For low priority resource usage or detect resource idling use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(file:function:line:)"},{"text":" ","type":"text"},{"text":"method or its timeout variation ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(until:tolerance:clock:file:function:line:)"},{"text":":","type":"text"}]},{"type":"codeListing","code":["\/\/ create event with initial count and count down limit","let event = AsyncCountdownEvent()","\/\/ increment countdown count from high priority tasks","event.increment(by: 1)","","\/\/ wait for countdown signal from low priority tasks,","\/\/ fails only if task cancelled","try await event.wait()","\/\/ or wait with some timeout","try await event.wait(forNanoseconds: 1_000_000_000)","","\/\/ signal countdown after completing high priority tasks","event.signal()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/limit","type":"reference"},{"text":" parameter to indicate concurrent low priority usage, i.e. if limit set to zero,","type":"text"},{"text":" ","type":"text"},{"text":"only one low priority usage allowed at one time.","type":"text"}]}]}],"abstract":[{"text":"An event object that controls access to a resource between high and low priority tasks","type":"text"},{"text":" ","type":"text"},{"text":"and signals when count is within limit.","type":"text"}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","doc:\/\/AsyncObjects\/s23CustomStringConvertibleP","doc:\/\/AsyncObjects\/s8SendableP","doc:\/\/AsyncObjects\/ScA","doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"references":{"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncEvent","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncEvent","kind":"identifier"}],"kind":"symbol","type":"topic","title":"AsyncEvent","url":"\/documentation\/asyncobjects\/asyncevent","abstract":[{"type":"text","text":"An object that controls execution of tasks depending on the signal state."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent"},"doc://AsyncObjects/documentation/AsyncObjects":{"abstract":[{"text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency.","type":"text"}],"role":"collection","title":"AsyncObjects","url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/CustomStringConvertible-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/CustomStringConvertible-Implementations","title":"CustomStringConvertible Implementations","abstract":[],"kind":"article","url":"\/documentation\/asyncobjects\/asynccountdownevent\/customstringconvertible-implementations"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/wait(file:function:line:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"type":"topic","role":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(file:function:line:)","title":"wait(file:function:line:)","abstract":[{"text":"Waits for, or increments, a countdown event.","type":"text"}],"kind":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/wait(file:function:line:)"},"doc://AsyncObjects/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/AsyncObjects\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/AsyncObject-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/AsyncObject-Implementations","title":"AsyncObject Implementations","abstract":[],"kind":"article","url":"\/documentation\/asyncobjects\/asynccountdownevent\/asyncobject-implementations"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/reset(to:file:function:line:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/reset(to:file:function:line:)","title":"reset(to:file:function:line:)","abstract":[{"text":"Resets initial count and current count to specified value.","type":"text"}],"kind":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/reset(to:file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/currentCount":{"title":"currentCount","kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/currentCount","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"currentCount","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/currentcount","type":"topic","abstract":[{"type":"text","text":"Current count of the countdown."}]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncCountdownEvent","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncCountdownEvent","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent","title":"AsyncCountdownEvent","role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent","abstract":[{"text":"An event object that controls access to a resource between high and low priority tasks","type":"text"},{"text":" ","type":"text"},{"text":"and signals when count is within limit.","type":"text"}]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/limit":{"title":"limit","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"limit","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"}],"url":"\/documentation\/asyncobjects\/asynccountdownevent\/limit","abstract":[{"text":"The limit up to which the countdown counts and triggers event.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/limit","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/isSet":{"title":"isSet","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isSet","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/asyncobjects\/asynccountdownevent\/isset","abstract":[{"text":"Indicates whether countdown event current count is within ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/limit"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/isSet","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/init(until:initial:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initial"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"title":"init(until:initial:)","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/init(until:initial:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Creates new countdown event with the limit count down up to and an initial count."},{"type":"text","text":" "},{"type":"text","text":"By default, both limit and initial count are zero."}],"role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/init(until:initial:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/increment(by:file:function:line:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"increment","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"title":"increment(by:file:function:line:)","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/increment(by:file:function:line:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Increments the countdown event current count by the specified value."}],"role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/increment(by:file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/wait(until:tolerance:clock:file:function:line:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Instant"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Instant"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"title":"wait(until:tolerance:clock:file:function:line:)","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(until:tolerance:clock:file:function:line:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Waits for the object to green light task execution within the deadline."}],"role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/wait(until:tolerance:clock:file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/initialCount":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"initialCount","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"}],"title":"initialCount","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/initialCount","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Initial count of the countdown when count started."}],"role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/initialcount"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/signal(repeat:file:function:line:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signal","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"repeat"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"title":"signal(repeat:file:function:line:)","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(repeat:file:function:line:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Registers multiple signals (decrements by provided count) with the countdown event."}],"role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/signal(repeat:file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncObject":{"abstract":[{"type":"text","text":"An object type that can provide synchronization across multiple task contexts"}],"navigatorTitle":[{"text":"AsyncObject","kind":"identifier"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","url":"\/documentation\/asyncobjects\/asyncobject","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncObject","kind":"identifier"}],"type":"topic","role":"symbol","title":"AsyncObject","kind":"symbol"},"doc://AsyncObjects/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/AsyncObjects\/s8SendableP","type":"unresolvable"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/signal(file:function:line:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signal","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"title":"signal(file:function:line:)","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(file:function:line:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Registers a signal (decrements) with the countdown event."}],"role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/signal(file:function:line:)"},"doc://AsyncObjects/12_Concurrency8AnyActorP":{"title":"_Concurrency.AnyActor","identifier":"doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP","type":"unresolvable"},"doc://AsyncObjects/ScA":{"title":"_Concurrency.Actor","identifier":"doc:\/\/AsyncObjects\/ScA","type":"unresolvable"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSemaphore","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSemaphore","kind":"identifier"}],"kind":"symbol","type":"topic","title":"AsyncSemaphore","url":"\/documentation\/asyncobjects\/asyncsemaphore","abstract":[{"type":"text","text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore"}}}