{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore."}],"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSemaphore"}]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"An async semaphore is an efficient implementation of a traditional counting semaphore."},{"type":"text","text":" "},{"type":"text","text":"Unlike traditional semaphore, async semaphore suspends current task instead of blocking threads."}],"type":"paragraph"},{"inlineContent":[{"text":"You increment a semaphore count by calling the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/signal(file:function:line:)"},{"text":" method","type":"text"},{"text":" ","type":"text"},{"text":"and decrement a semaphore count by calling ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(file:function:line:)"},{"text":" method","type":"text"},{"text":" ","type":"text"},{"text":"or its timeout variation ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(until:tolerance:clock:file:function:line:)"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["\/\/ create limiting concurrent access count","let semaphore = AsyncSemaphore(value: 1)","\/\/ wait for semaphore access,","\/\/ fails only if task cancelled","try await semaphore.wait()","\/\/ or wait with some timeout","try await semaphore.wait(forNanoseconds: 1_000_000_000)","\/\/ release after executing critical async tasks","defer { semaphore.signal() }"],"syntax":"swift","type":"codeListing"}]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","doc:\/\/AsyncObjects\/s23CustomStringConvertibleP","doc:\/\/AsyncObjects\/s8SendableP","doc:\/\/AsyncObjects\/ScA","doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"]}],"metadata":{"modules":[{"name":"AsyncObjects"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSemaphore"}],"title":"AsyncSemaphore","symbolKind":"class","roleHeading":"Class","externalID":"s:12AsyncObjects0A9SemaphoreC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSemaphore"}],"role":"symbol"},"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/init(value:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/signal(file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(file:function:line:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/AsyncObject-Implementations","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/CustomStringConvertible-Implementations"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/asyncsemaphore"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore"},"seeAlsoSections":[{"title":"Synchronization Primitives","generated":true,"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent"]}],"references":{"doc://AsyncObjects/12_Concurrency8AnyActorP":{"type":"unresolvable","identifier":"doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP","title":"_Concurrency.AnyActor"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/AsyncObject-Implementations":{"role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/asyncobjects\/asyncsemaphore\/asyncobject-implementations","kind":"article","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/AsyncObject-Implementations","title":"AsyncObject Implementations"},"doc://AsyncObjects/ScA":{"type":"unresolvable","identifier":"doc:\/\/AsyncObjects\/ScA","title":"_Concurrency.Actor"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/signal(file:function:line:)":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Signals (increments) a semaphore."}],"url":"\/documentation\/asyncobjects\/asyncsemaphore\/signal(file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/signal(file:function:line:)","title":"signal(file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncCountdownEvent","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncCountdownEvent","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent","title":"AsyncCountdownEvent","role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent","abstract":[{"text":"An event object that controls access to a resource between high and low priority tasks","type":"text"},{"text":" ","type":"text"},{"text":"and signals when count is within limit.","type":"text"}]},"doc://AsyncObjects/documentation/AsyncObjects":{"abstract":[{"text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency.","type":"text"}],"role":"collection","title":"AsyncObjects","url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/wait(until:tolerance:clock:file:function:line:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"until","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Instant","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Instant","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","role":"symbol","title":"wait(until:tolerance:clock:file:function:line:)","url":"\/documentation\/asyncobjects\/asyncsemaphore\/wait(until:tolerance:clock:file:function:line:)","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(until:tolerance:clock:file:function:line:)","abstract":[{"text":"Waits for the object to green light task execution within the deadline.","type":"text"}],"kind":"symbol"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncEvent","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncEvent","kind":"identifier"}],"kind":"symbol","type":"topic","title":"AsyncEvent","url":"\/documentation\/asyncobjects\/asyncevent","abstract":[{"type":"text","text":"An object that controls execution of tasks depending on the signal state."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSemaphore","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncSemaphore","kind":"identifier"}],"kind":"symbol","type":"topic","title":"AsyncSemaphore","url":"\/documentation\/asyncobjects\/asyncsemaphore","abstract":[{"type":"text","text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/wait(file:function:line:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","type":"topic","title":"wait(file:function:line:)","url":"\/documentation\/asyncobjects\/asyncsemaphore\/wait(file:function:line:)","abstract":[{"type":"text","text":"Waits for, or decrements, a semaphore."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(file:function:line:)"},"doc://AsyncObjects/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/AsyncObjects\/s8SendableP"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/CustomStringConvertible-Implementations":{"role":"collectionGroup","kind":"article","type":"topic","title":"CustomStringConvertible Implementations","url":"\/documentation\/asyncobjects\/asyncsemaphore\/customstringconvertible-implementations","abstract":[],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/CustomStringConvertible-Implementations"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/init(value:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","title":"init(value:)","url":"\/documentation\/asyncobjects\/asyncsemaphore\/init(value:)","abstract":[{"type":"text","text":"Creates new counting semaphore with an initial value."},{"type":"text","text":" "},{"type":"text","text":"By default, initial value is zero."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/init(value:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncObject":{"abstract":[{"type":"text","text":"An object type that can provide synchronization across multiple task contexts"}],"navigatorTitle":[{"text":"AsyncObject","kind":"identifier"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","url":"\/documentation\/asyncobjects\/asyncobject","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncObject","kind":"identifier"}],"type":"topic","role":"symbol","title":"AsyncObject","kind":"symbol"},"doc://AsyncObjects/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/AsyncObjects\/s23CustomStringConvertibleP"}}}