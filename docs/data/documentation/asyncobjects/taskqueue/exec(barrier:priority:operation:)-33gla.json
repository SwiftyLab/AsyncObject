{"kind":"symbol","sections":[],"metadata":{"externalID":"s:12AsyncObjects9TaskQueueC4exec7barrier8priority9operationxSb_AC8PriorityOSgxyYaYbKctYaKlF","modules":[{"name":"AsyncObjects"}],"roleHeading":"Instance Method","role":"symbol","title":"exec(barrier:priority:operation:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"exec"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"barrier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"priority","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12AsyncObjects9TaskQueueC","kind":"typeIdentifier","text":"TaskQueue"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12AsyncObjects9TaskQueueC8PriorityO","kind":"typeIdentifier","text":"Priority"},{"kind":"text","text":"?, "},{"text":"operation","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskQueue"]]},"abstract":[{"text":"Executes the given throwing operation asynchronously based on the priority.","type":"text"}],"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskQueue\/exec(barrier:priority:operation:)-33gla","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":2},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exec","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"barrier","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" = false, ","kind":"text"},{"text":"priority","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12AsyncObjects9TaskQueueC","text":"TaskQueue","kind":"typeIdentifier","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskQueue"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12AsyncObjects9TaskQueueC8PriorityO","text":"Priority","kind":"typeIdentifier","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskQueue\/Priority-swift.enum"},{"text":"? = nil, ","kind":"text"},{"text":"operation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"languages":["swift"]}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The result from provided operation."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"name":"barrier","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the task should run as a barrier blocking queue."}]}]},{"name":"priority","content":[{"type":"paragraph","inlineContent":[{"text":"The priority with which operation executed.","type":"text"},{"text":" ","type":"text"},{"text":"By default ","type":"text"},{"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskQueue\/Priority-swift.enum\/none","type":"reference","isActive":true},{"text":" is used","type":"text"},{"text":" ","type":"text"},{"text":"to execute tasks directly without creating as a new top-level task.","type":"text"}]}]},{"name":"operation","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The throwing operation to perform."}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Immediately runs the provided operation if queue isn’t locked by barrier task,"},{"type":"text","text":" "},{"type":"text","text":"otherwise adds operation to queue to be executed later."}],"type":"paragraph"},{"inlineContent":[{"text":"You can set the ","type":"text"},{"code":"barrier","type":"codeVoice"},{"text":" flag to ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" to block queue until provided operation finishes.","type":"text"},{"text":" ","type":"text"},{"text":"By default, the flag is set to ","type":"text"},{"code":"false","type":"codeVoice"},{"text":". When opting in to run operation as barrier,","type":"text"},{"text":" ","type":"text"},{"text":"only newly submitted operations will be added to queue to be executed later,","type":"text"},{"text":" ","type":"text"},{"text":"while already running operations won’t be affected.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If a new barrier task is added while queue is locked by another barrier task,"},{"type":"text","text":" "},{"type":"text","text":"the new task will be added queue and will only block tasks that are added after it to the queue."}],"type":"paragraph"},{"name":"Throws","style":"note","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"CancellationError","type":"codeVoice"},{"text":" if cancelled, or error from provided operation.","type":"text"}],"type":"paragraph"}]},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If task that added the operation to queue is cancelled,"},{"type":"text","text":" "},{"type":"text","text":"the provided operation also cancelled cooperatively if already started"},{"type":"text","text":" "},{"type":"text","text":"or the operation execution is skipped if only queued and not started."}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/taskqueue\/exec(barrier:priority:operation:)-33gla"]}],"references":{"doc://AsyncObjects/documentation/AsyncObjects/TaskQueue":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaskQueue"}],"title":"TaskQueue","navigatorTitle":[{"kind":"identifier","text":"TaskQueue"}],"url":"\/documentation\/asyncobjects\/taskqueue","abstract":[{"type":"text","text":"An object that acts as a concurrent queue executing submitted tasks concurrently."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskQueue"},"doc://AsyncObjects/documentation/AsyncObjects/TaskQueue/Priority-swift.enum":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Priority"}],"title":"TaskQueue.Priority","navigatorTitle":[{"kind":"identifier","text":"Priority"}],"url":"\/documentation\/asyncobjects\/taskqueue\/priority-swift.enum","abstract":[{"type":"text","text":"The execution priority of operations added to queue."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskQueue\/Priority-swift.enum"},"doc://AsyncObjects/documentation/AsyncObjects/TaskQueue/Priority-swift.enum/none":{"role":"symbol","abstract":[{"type":"text","text":"Indicates to run the operation directly without creating as a new top-level task."}],"kind":"symbol","title":"TaskQueue.Priority.none","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskQueue\/Priority-swift.enum\/none","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"none"}],"type":"topic","url":"\/documentation\/asyncobjects\/taskqueue\/priority-swift.enum\/none"},"doc://AsyncObjects/documentation/AsyncObjects/TaskQueue/exec(barrier:priority:operation:)-33gla":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"exec"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"barrier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12AsyncObjects9TaskQueueC","text":"TaskQueue"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12AsyncObjects9TaskQueueC8PriorityO","text":"Priority"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"operation"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"title":"exec(barrier:priority:operation:)","url":"\/documentation\/asyncobjects\/taskqueue\/exec(barrier:priority:operation:)-33gla","abstract":[{"type":"text","text":"Executes the given throwing operation asynchronously based on the priority."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/TaskQueue\/exec(barrier:priority:operation:)-33gla"},"doc://AsyncObjects/documentation/AsyncObjects":{"title":"AsyncObjects","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"type":"topic","kind":"symbol","url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","role":"collection"}}}