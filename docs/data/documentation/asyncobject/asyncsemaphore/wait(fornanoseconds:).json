{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObject\/documentation\/AsyncObject\/AsyncSemaphore\/wait(forNanoseconds:)"},"kind":"symbol","variants":[{"paths":["\/documentation\/asyncobject\/asyncsemaphore\/wait(fornanoseconds:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":2,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/AsyncObject\/documentation\/AsyncObject","doc:\/\/AsyncObject\/documentation\/AsyncObject\/AsyncSemaphore"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forNanoseconds"},{"kind":"text","text":" "},{"kind":"internalParam","text":"duration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/AsyncObject\/documentation\/AsyncObject\/TaskTimeoutResult","kind":"typeIdentifier","preciseIdentifier":"s:11AsyncObject17TaskTimeoutResultO","text":"TaskTimeoutResult"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"The result indicating whether wait completed or timed out.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"name":"duration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The duration in nano seconds to wait until."}]}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Decrement the counting semaphore. If the resulting value is less than zero,","type":"text"},{"text":" ","type":"text"},{"text":"current task is suspended until a signal occurs or timeout duration completes.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"roleHeading":"Instance Method","title":"wait(forNanoseconds:)","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forNanoseconds"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11AsyncObject17TaskTimeoutResultO","kind":"typeIdentifier","text":"TaskTimeoutResult"}],"modules":[{"name":"AsyncObject"}],"externalID":"s:11AsyncObject0A9SemaphoreC4wait14forNanosecondsAA17TaskTimeoutResultOs6UInt64V_tYaF"},"abstract":[{"text":"Waits for within the duration, or decrements, a semaphore.","type":"text"}],"references":{"doc://AsyncObject/documentation/AsyncObject":{"identifier":"doc:\/\/AsyncObject\/documentation\/AsyncObject","kind":"symbol","role":"collection","title":"AsyncObject","abstract":[{"type":"text","text":"Several synchronization primitives introduced to aid in modern swift concurrency. The primitives are very similar to those used in other operating systems including mutexes, condition variables, shared\/exclusive locks, and semaphores."}],"type":"topic","url":"\/documentation\/asyncobject"},"doc://AsyncObject/documentation/AsyncObject/AsyncSemaphore/wait(forNanoseconds:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"(","kind":"text"},{"text":"forNanoseconds","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt64","preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"TaskTimeoutResult","preciseIdentifier":"s:11AsyncObject17TaskTimeoutResultO","kind":"typeIdentifier"}],"abstract":[{"text":"Waits for within the duration, or decrements, a semaphore.","type":"text"}],"url":"\/documentation\/asyncobject\/asyncsemaphore\/wait(fornanoseconds:)","identifier":"doc:\/\/AsyncObject\/documentation\/AsyncObject\/AsyncSemaphore\/wait(forNanoseconds:)","type":"topic","kind":"symbol","title":"wait(forNanoseconds:)","role":"symbol"},"doc://AsyncObject/documentation/AsyncObject/AsyncSemaphore":{"abstract":[{"text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AsyncSemaphore","kind":"identifier"}],"identifier":"doc:\/\/AsyncObject\/documentation\/AsyncObject\/AsyncSemaphore","type":"topic","title":"AsyncSemaphore","url":"\/documentation\/asyncobject\/asyncsemaphore","navigatorTitle":[{"text":"AsyncSemaphore","kind":"identifier"}]},"doc://AsyncObject/documentation/AsyncObject/TaskTimeoutResult":{"identifier":"doc:\/\/AsyncObject\/documentation\/AsyncObject\/TaskTimeoutResult","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"TaskTimeoutResult","kind":"identifier"}],"title":"TaskTimeoutResult","abstract":[{"type":"text","text":"A result value indicating whether a task finished before a specified time."}],"navigatorTitle":[{"text":"TaskTimeoutResult","kind":"identifier"}],"type":"topic","url":"\/documentation\/asyncobject\/tasktimeoutresult"}}}