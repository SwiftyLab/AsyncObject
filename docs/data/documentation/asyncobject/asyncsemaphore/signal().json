{"hierarchy":{"paths":[["doc:\/\/AsyncObject\/documentation\/AsyncObject","doc:\/\/AsyncObject\/documentation\/AsyncObject\/AsyncSemaphore"]]},"variants":[{"paths":["\/documentation\/asyncobject\/asyncsemaphore\/signal()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObject\/documentation\/AsyncObject\/AsyncSemaphore\/signal()"},"abstract":[{"text":"Signals (increments) a semaphore.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signal"},{"kind":"text","text":"()"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Increment the counting semaphore."},{"type":"text","text":" "},{"type":"text","text":"If the previous value was less than zero,"},{"type":"text","text":" "},{"type":"text","text":"current task is resumed from suspension."}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","schemaVersion":{"major":0,"minor":2,"patch":0},"metadata":{"roleHeading":"Instance Method","title":"signal()","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signal","kind":"identifier"},{"text":"()","kind":"text"}],"modules":[{"name":"AsyncObject"}],"externalID":"s:11AsyncObject0A9SemaphoreC6signalyyF"},"sections":[],"references":{"doc://AsyncObject/documentation/AsyncObject/AsyncSemaphore":{"abstract":[{"text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AsyncSemaphore","kind":"identifier"}],"identifier":"doc:\/\/AsyncObject\/documentation\/AsyncObject\/AsyncSemaphore","type":"topic","title":"AsyncSemaphore","url":"\/documentation\/asyncobject\/asyncsemaphore","navigatorTitle":[{"text":"AsyncSemaphore","kind":"identifier"}]},"doc://AsyncObject/documentation/AsyncObject/AsyncSemaphore/signal()":{"url":"\/documentation\/asyncobject\/asyncsemaphore\/signal()","kind":"symbol","identifier":"doc:\/\/AsyncObject\/documentation\/AsyncObject\/AsyncSemaphore\/signal()","abstract":[{"text":"Signals (increments) a semaphore.","type":"text"}],"title":"signal()","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signal","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://AsyncObject/documentation/AsyncObject":{"identifier":"doc:\/\/AsyncObject\/documentation\/AsyncObject","kind":"symbol","role":"collection","title":"AsyncObject","abstract":[{"type":"text","text":"Several synchronization primitives introduced to aid in modern swift concurrency. The primitives are very similar to those used in other operating systems including mutexes, condition variables, shared\/exclusive locks, and semaphores."}],"type":"topic","url":"\/documentation\/asyncobject"}}}