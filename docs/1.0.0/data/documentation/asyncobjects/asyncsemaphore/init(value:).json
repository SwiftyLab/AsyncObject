{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":" "},{"kind":"internalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":" = 0)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The newly created semaphore."}]}]},{"kind":"parameters","parameters":[{"name":"count","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The starting value for the semaphore."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Passing zero for the value is useful for when two threads need to reconcile the completion of a particular event."},{"type":"text","text":" "},{"type":"text","text":"Passing a value greater than zero is useful for managing a finite pool of resources, where the pool size is equal to the value."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/asyncobjects\/asyncsemaphore\/init(value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/init(value:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates new counting semaphore with an initial value."},{"type":"text","text":" "},{"type":"text","text":"By default, initial value is zero."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"title":"init(value:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:12AsyncObjects0A9SemaphoreC5valueACSu_tcfc","modules":[{"name":"AsyncObjects"}]},"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore"]]},"references":{"doc://AsyncObjects/documentation/AsyncObjects":{"role":"collection","title":"AsyncObjects","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore":{"role":"symbol","title":"AsyncSemaphore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSemaphore"}],"abstract":[{"type":"text","text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSemaphore"}],"url":"\/documentation\/asyncobjects\/asyncsemaphore"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/init(value:)":{"role":"symbol","title":"init(value:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates new counting semaphore with an initial value."},{"type":"text","text":" "},{"type":"text","text":"By default, initial value is zero."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/init(value:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/asyncsemaphore\/init(value:)"}}}