{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"Future"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Failure"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use a future to perform some work and then asynchronously publish a single element."},{"type":"text","text":" "},{"type":"text","text":"You can initialize the future with a closure that takes a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/Promise"},{"type":"text","text":";"},{"type":"text","text":" "},{"type":"text","text":"the closure calls the promise with a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" that indicates either success or failure."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Otherwise, you can create future and fulfill it with a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" that indicates either success or failure"},{"type":"text","text":" "},{"type":"text","text":"by using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/fulfill(with:)"},{"type":"text","text":" method. In the success case,"},{"type":"text","text":" "},{"type":"text","text":"the futureâ€™s downstream subscriber receives the element prior to the publishing stream finishing normally."},{"type":"text","text":" "},{"type":"text","text":"If the result is an error, publishing terminates with that error."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/asyncobjects\/future"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/AsyncObjects\/s8SendableP","doc:\/\/AsyncObjects\/ScA","doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An object that eventually produces a single value and then finishes or fails."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Future"}],"title":"Future","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:12AsyncObjects6FutureC","modules":[{"name":"AsyncObjects"}],"navigatorTitle":[{"kind":"identifier","text":"Future"}]},"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/init()","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/init(attemptToFulfill:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/init(with:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/result","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/value-65dee","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/value-7i3i1"]},{"title":"Instance Methods","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/fulfill(producing:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/fulfill(throwing:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/fulfill(with:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/FutureResult","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/Promise"]},{"title":"Type Methods","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/all(_:)-3grv8","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/all(_:)-5qmjc","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/all(_:)-8hzyo","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/all(_:)-vovz","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/allSettled(_:)-49u8v","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/allSettled(_:)-5rlms","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/allSettled(_:)-6pbjp","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/allSettled(_:)-9428o","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/any(_:)-27lks","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/any(_:)-3026x","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/any(_:)-5imc0","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/any(_:)-la80","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/race(_:)-1o20k","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/race(_:)-3t7ol","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/race(_:)-5ejrj","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/race(_:)-93qn7"]}],"references":{"doc://AsyncObjects/documentation/AsyncObjects/Future/all(_:)-8hzyo":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"all(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"all"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Combines into a single future, for all futures to be fulfilled."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/all(_:)-8hzyo","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/all(_:)-8hzyo"},"doc://AsyncObjects/documentation/AsyncObjects/Future/race(_:)-1o20k":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"race(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"race"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">...) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Takes multiple futures and, returns a single future that fulfills with the value"},{"type":"text","text":" "},{"type":"text","text":"as soon as any of the futures is fulfilled or rejected."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/race(_:)-1o20k","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/race(_:)-1o20k"},"doc://AsyncObjects/documentation/AsyncObjects/Future/race(_:)-3t7ol":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"race(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"race"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Takes multiple futures and, returns a single future that fulfills with the value"},{"type":"text","text":" "},{"type":"text","text":"as soon as any of the futures is fulfilled."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/race(_:)-3t7ol","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/race(_:)-3t7ol"},"doc://AsyncObjects/documentation/AsyncObjects/Future/fulfill(producing:)":{"role":"symbol","title":"fulfill(producing:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fulfill"},{"kind":"text","text":"("},{"kind":"externalParam","text":"producing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Fulfill the future by producing the given value and notify subscribers."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/fulfill(producing:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/fulfill(producing:)"},"doc://AsyncObjects/documentation/AsyncObjects/Future/race(_:)-93qn7":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"race(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"race"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Takes multiple futures and, returns a single future that fulfills with the value"},{"type":"text","text":" "},{"type":"text","text":"as soon as any of the futures is fulfilled or rejected."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/race(_:)-93qn7","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/race(_:)-93qn7"},"doc://AsyncObjects/documentation/AsyncObjects/Future/FutureResult":{"role":"symbol","title":"Future.FutureResult","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FutureResult"}],"abstract":[{"type":"text","text":"A type that represents the result in the future, when an element or error is available."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/FutureResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FutureResult"}],"url":"\/documentation\/asyncobjects\/future\/futureresult"},"doc://AsyncObjects/documentation/AsyncObjects/Future/any(_:)-27lks":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"any(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Takes multiple futures and, returns a single future that fulfills with the value as soon as one of the futures fulfills."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/any(_:)-27lks","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/any(_:)-27lks"},"doc://AsyncObjects/12_Concurrency8AnyActorP":{"type":"unresolvable","title":"_Concurrency.AnyActor","identifier":"doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"},"doc://AsyncObjects/documentation/AsyncObjects/Future/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a future that can be fulfilled later by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/fulfill(with:)"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"text","text":"any other variation of this methods."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/init()","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/init()"},"doc://AsyncObjects/documentation/AsyncObjects/Future/all(_:)-vovz":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"all(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"all"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">...) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Combines into a single future, for all futures to be fulfilled, or for any to be rejected."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/all(_:)-vovz","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/all(_:)-vovz"},"doc://AsyncObjects/documentation/AsyncObjects/Future/init(attemptToFulfill:)":{"role":"symbol","title":"init(attemptToFulfill:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"attemptToFulfill"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Promise","preciseIdentifier":"s:12AsyncObjects6FutureC7Promisea"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"Creates a future that invokes a promise closure when the publisher emits an element."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/init(attemptToFulfill:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/init(attempttofulfill:)"},"doc://AsyncObjects/documentation/AsyncObjects/Future/allSettled(_:)-6pbjp":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"allSettled(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"allSettled"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"FutureResult","preciseIdentifier":"s:12AsyncObjects6FutureC0C6Resulta"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Combines into a single future, for all futures to have settled."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/allSettled(_:)-6pbjp","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/allsettled(_:)-6pbjp"},"doc://AsyncObjects/documentation/AsyncObjects/Future/allSettled(_:)-9428o":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"allSettled(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"allSettled"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"FutureResult","preciseIdentifier":"s:12AsyncObjects6FutureC0C6Resulta"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Combines into a single future, for all futures to have settled (each may fulfill or reject)."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/allSettled(_:)-9428o","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/allsettled(_:)-9428o"},"doc://AsyncObjects/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/AsyncObjects\/s8SendableP"},"doc://AsyncObjects/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/AsyncObjects\/ScA"},"doc://AsyncObjects/documentation/AsyncObjects/Future/allSettled(_:)-49u8v":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"allSettled(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"allSettled"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">...) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"FutureResult","preciseIdentifier":"s:12AsyncObjects6FutureC0C6Resulta"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Combines into a single future, for all futures to have settled (each may fulfill or reject)."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/allSettled(_:)-49u8v","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/allsettled(_:)-49u8v"},"doc://AsyncObjects/documentation/AsyncObjects/Future/Promise":{"role":"symbol","title":"Future.Promise","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Promise"}],"abstract":[{"type":"text","text":"A type that represents a closure to invoke in the future, when an element or error is available."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/Promise","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Promise"}],"url":"\/documentation\/asyncobjects\/future\/promise"},"doc://AsyncObjects/documentation/AsyncObjects/Future/value-65dee":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"value","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"type":"text","text":"The published value of the future, delivered asynchronously."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/value-65dee","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/value-65dee"},"doc://AsyncObjects/documentation/AsyncObjects/Future/fulfill(throwing:)":{"role":"symbol","title":"fulfill(throwing:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fulfill"},{"kind":"text","text":"("},{"kind":"externalParam","text":"throwing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Terminate the future with the given error and propagate error to subscribers."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/fulfill(throwing:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/fulfill(throwing:)"},"doc://AsyncObjects/documentation/AsyncObjects/Future/init(with:)":{"role":"symbol","title":"init(with:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"FutureResult","preciseIdentifier":"s:12AsyncObjects6FutureC0C6Resulta"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"Create an already fulfilled promise with the provided "},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/init(with:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/init(with:)"},"doc://AsyncObjects/documentation/AsyncObjects/Future":{"role":"symbol","title":"Future","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Future"}],"abstract":[{"type":"text","text":"An object that eventually produces a single value and then finishes or fails."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Future"}],"url":"\/documentation\/asyncobjects\/future"},"doc://AsyncObjects/documentation/AsyncObjects/Future/all(_:)-5qmjc":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"all(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"all"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">...) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Combines into a single future, for all futures to be fulfilled."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/all(_:)-5qmjc","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/all(_:)-5qmjc"},"doc://AsyncObjects/documentation/AsyncObjects/Future/any(_:)-3026x":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"any(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">...) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Takes multiple futures and, returns a single future that fulfills with the value as soon as one of the futures fulfills."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/any(_:)-3026x","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/any(_:)-3026x"},"doc://AsyncObjects/documentation/AsyncObjects/Future/value-7i3i1":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"value","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"type":"text","text":"The published value of the future or an error, delivered asynchronously."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/value-7i3i1","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/value-7i3i1"},"doc://AsyncObjects/documentation/AsyncObjects/Future/result":{"role":"symbol","title":"result","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"result"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"FutureResult","preciseIdentifier":"s:12AsyncObjects6FutureC0C6Resulta"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The underlying "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" that indicates either future fulfilled or rejected."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/result","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/result"},"doc://AsyncObjects/documentation/AsyncObjects/Future/fulfill(with:)":{"role":"symbol","title":"fulfill(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fulfill"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"FutureResult","preciseIdentifier":"s:12AsyncObjects6FutureC0C6Resulta"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Fulfill the future by returning or throwing the given result value."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/fulfill(with:)","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/fulfill(with:)"},"doc://AsyncObjects/documentation/AsyncObjects/Future/all(_:)-3grv8":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"all(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"all"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Combines into a single future, for all futures to be fulfilled, or for any to be rejected."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/all(_:)-3grv8","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/all(_:)-3grv8"},"doc://AsyncObjects/documentation/AsyncObjects/Future/race(_:)-5ejrj":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"race(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"race"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">...) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Takes multiple futures and, returns a single future that fulfills with the value"},{"type":"text","text":" "},{"type":"text","text":"as soon as any of the futures is fulfilled."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/race(_:)-5ejrj","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/race(_:)-5ejrj"},"doc://AsyncObjects/documentation/AsyncObjects/Future/any(_:)-la80":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"any(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">...) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Takes multiple futures and, returns a single future that fulfills with the value as soon as one of the futures fulfills."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/any(_:)-la80","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/any(_:)-la80"},"doc://AsyncObjects/documentation/AsyncObjects/Future/any(_:)-5imc0":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"any(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Takes multiple futures and, returns a single future that fulfills with the value as soon as one of the futures fulfills."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/any(_:)-5imc0","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/any(_:)-5imc0"},"doc://AsyncObjects/documentation/AsyncObjects/Future/allSettled(_:)-5rlms":{"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"allSettled(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"allSettled"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">...) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:12AsyncObjects6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"FutureResult","preciseIdentifier":"s:12AsyncObjects6FutureC0C6Resulta"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Combines into a single future, for all futures to have settled."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Future\/allSettled(_:)-5rlms","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/future\/allsettled(_:)-5rlms"},"doc://AsyncObjects/documentation/AsyncObjects":{"role":"collection","title":"AsyncObjects","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects","kind":"symbol","type":"topic","url":"\/documentation\/asyncobjects"}}}