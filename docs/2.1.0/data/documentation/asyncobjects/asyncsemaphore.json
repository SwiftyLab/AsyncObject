{"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","doc:\/\/AsyncObjects\/s23CustomStringConvertibleP","doc:\/\/AsyncObjects\/s8SendableP","doc:\/\/AsyncObjects\/ScA","doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"],"title":"Conforms To"}],"abstract":[{"type":"text","text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore."}],"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent"],"title":"Synchronization Primitives"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/asyncsemaphore"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSemaphore","kind":"identifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"An async semaphore is an efficient implementation of a traditional counting semaphore."},{"type":"text","text":" "},{"type":"text","text":"Unlike traditional semaphore, async semaphore suspends current task instead of blocking threads."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You increment a semaphore count by calling the "},{"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/signal(file:function:line:)","isActive":true},{"type":"text","text":" method"},{"type":"text","text":" "},{"type":"text","text":"and decrement a semaphore count by calling "},{"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(file:function:line:)","isActive":true},{"type":"text","text":" method"},{"type":"text","text":" "},{"type":"text","text":"or its timeout variation "},{"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(until:tolerance:clock:file:function:line:)","isActive":true},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ create limiting concurrent access count","let semaphore = AsyncSemaphore(value: 1)","\/\/ wait for semaphore access,","\/\/ fails only if task cancelled","try await semaphore.wait()","\/\/ or wait with some timeout","try await semaphore.wait(forNanoseconds: 1_000_000_000)","\/\/ release after executing critical async tasks","defer { semaphore.signal() }"],"type":"codeListing"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/init(value:)"],"title":"Initializers"},{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/signal(file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(file:function:line:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/AsyncObject-Implementations","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/CustomStringConvertible-Implementations"],"title":"Default Implementations","generated":true}],"metadata":{"modules":[{"name":"AsyncObjects"}],"title":"AsyncSemaphore","symbolKind":"class","role":"symbol","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"AsyncSemaphore"}],"externalID":"s:12AsyncObjects0A9SemaphoreC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSemaphore"}]},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects"]]},"references":{"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/init(value:)":{"abstract":[{"type":"text","text":"Creates new counting semaphore with an initial value."},{"type":"text","text":" "},{"type":"text","text":"By default, initial value is zero."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/init(value:)","title":"init(value:)","type":"topic","url":"\/documentation\/asyncobjects\/asyncsemaphore\/init(value:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://AsyncObjects/s8SendableP":{"identifier":"doc:\/\/AsyncObjects\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent":{"url":"\/documentation\/asyncobjects\/asynccountdownevent","abstract":[{"text":"An event object that controls access to a resource between high and low priority tasks","type":"text"},{"text":" ","type":"text"},{"text":"and signals when count is within limit.","type":"text"}],"type":"topic","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent","navigatorTitle":[{"text":"AsyncCountdownEvent","kind":"identifier"}],"kind":"symbol","title":"AsyncCountdownEvent","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncCountdownEvent","kind":"identifier"}]},"doc://AsyncObjects/documentation/AsyncObjects":{"title":"AsyncObjects","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/AsyncObject-Implementations":{"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/AsyncObject-Implementations","role":"collectionGroup","title":"AsyncObject Implementations","kind":"article","url":"\/documentation\/asyncobjects\/asyncsemaphore\/asyncobject-implementations","type":"topic","abstract":[]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/CustomStringConvertible-Implementations":{"type":"topic","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/CustomStringConvertible-Implementations","url":"\/documentation\/asyncobjects\/asyncsemaphore\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","abstract":[],"kind":"article","role":"collectionGroup"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/wait(file:function:line:)":{"title":"wait(file:function:line:)","abstract":[{"type":"text","text":"Waits for, or decrements, a semaphore."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(file:function:line:)","url":"\/documentation\/asyncobjects\/asyncsemaphore\/wait(file:function:line:)","role":"symbol"},"doc://AsyncObjects/ScA":{"identifier":"doc:\/\/AsyncObjects\/ScA","title":"_Concurrency.Actor","type":"unresolvable"},"doc://AsyncObjects/s23CustomStringConvertibleP":{"identifier":"doc:\/\/AsyncObjects\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://AsyncObjects/12_Concurrency8AnyActorP":{"identifier":"doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP","title":"_Concurrency.AnyActor","type":"unresolvable"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore":{"url":"\/documentation\/asyncobjects\/asyncsemaphore","type":"topic","navigatorTitle":[{"text":"AsyncSemaphore","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","abstract":[{"text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore.","type":"text"}],"title":"AsyncSemaphore","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSemaphore","kind":"identifier"}]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent":{"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent","title":"AsyncEvent","kind":"symbol","navigatorTitle":[{"text":"AsyncEvent","kind":"identifier"}],"abstract":[{"text":"An object that controls execution of tasks depending on the signal state.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncEvent","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/asyncobjects\/asyncevent"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/signal(file:function:line:)":{"abstract":[{"text":"Signals (increments) a semaphore.","type":"text"}],"type":"topic","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/signal(file:function:line:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"signal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","url":"\/documentation\/asyncobjects\/asyncsemaphore\/signal(file:function:line:)","title":"signal(file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncObject":{"navigatorTitle":[{"text":"AsyncObject","kind":"identifier"}],"title":"AsyncObject","abstract":[{"type":"text","text":"An object type that can provide synchronization across multiple task contexts"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncObject","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","url":"\/documentation\/asyncobjects\/asyncobject","role":"symbol"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/wait(until:tolerance:clock:file:function:line:)":{"url":"\/documentation\/asyncobjects\/asyncsemaphore\/wait(until:tolerance:clock:file:function:line:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"until","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Instant","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"tolerance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Instant","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Duration","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"clock","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"wait(until:tolerance:clock:file:function:line:)","role":"symbol","abstract":[{"type":"text","text":"Waits for the object to green light task execution within the deadline."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/wait(until:tolerance:clock:file:function:line:)"}}}