{"sections":[],"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore"]]},"variants":[{"paths":["\/documentation\/asyncobjects\/asyncsemaphore\/init(value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":" "},{"kind":"internalParam","text":"count"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":" = 0)"}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"The newly created semaphore.","type":"text"}]}]},{"parameters":[{"name":"count","content":[{"inlineContent":[{"type":"text","text":"The starting value for the semaphore."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"Passing zero for the value is useful for when two threads need to reconcile the completion of a particular event.","type":"text"},{"text":" ","type":"text"},{"text":"Passing a value greater than zero is useful for managing a finite pool of resources, where the pool size is equal to the value.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Creates new counting semaphore with an initial value."},{"type":"text","text":" "},{"type":"text","text":"By default, initial value is zero."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/init(value:)"},"metadata":{"modules":[{"name":"AsyncObjects"}],"role":"symbol","roleHeading":"Initializer","title":"init(value:)","externalID":"s:12AsyncObjects0A9SemaphoreC5valueACSu_tcfc","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}]},"references":{"doc://AsyncObjects/documentation/AsyncObjects":{"title":"AsyncObjects","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore":{"url":"\/documentation\/asyncobjects\/asyncsemaphore","type":"topic","navigatorTitle":[{"text":"AsyncSemaphore","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","abstract":[{"text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore.","type":"text"}],"title":"AsyncSemaphore","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSemaphore","kind":"identifier"}]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore/init(value:)":{"abstract":[{"type":"text","text":"Creates new counting semaphore with an initial value."},{"type":"text","text":" "},{"type":"text","text":"By default, initial value is zero."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore\/init(value:)","title":"init(value:)","type":"topic","url":"\/documentation\/asyncobjects\/asyncsemaphore\/init(value:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"kind":"symbol"}}}