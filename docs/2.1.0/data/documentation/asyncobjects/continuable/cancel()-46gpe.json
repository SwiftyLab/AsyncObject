{"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/cancel()-46gpe"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"text":"()","kind":"text"}]}]}],"metadata":{"title":"cancel()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"kind":"text","text":"()"}],"extendedModule":"AsyncObjects","externalID":"s:12AsyncObjects11ContinuablePAAs5Error_p7FailureRtzrlE6cancelyyF","roleHeading":"Instance Method","conformance":{"constraints":[{"code":"Failure","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","symbolKind":"method","modules":[{"name":"AsyncObjects"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"Cancel continuation by resuming with cancellation error.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/continuable\/cancel()-46gpe"]}],"kind":"symbol","references":{"doc://AsyncObjects/documentation/AsyncObjects/Continuable/cancel()-46gpe":{"url":"\/documentation\/asyncobjects\/continuable\/cancel()-46gpe","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Cancel continuation by resuming with cancellation error."}],"kind":"symbol","title":"cancel()","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/cancel()-46gpe","conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"()"}]},"doc://AsyncObjects/documentation/AsyncObjects/Continuable":{"title":"Continuable","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that allows to interface between synchronous and asynchronous code,"},{"type":"text","text":" "},{"type":"text","text":"by representing task state and allowing task resuming with some value or error."}],"navigatorTitle":[{"text":"Continuable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Continuable","kind":"identifier"}],"url":"\/documentation\/asyncobjects\/continuable","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable"},"doc://AsyncObjects/documentation/AsyncObjects":{"title":"AsyncObjects","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects"}}}