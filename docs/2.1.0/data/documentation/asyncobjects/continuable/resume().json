{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/continuable\/resume()"]}],"abstract":[{"text":"Resume the task that’s awaiting the continuation by returning.","type":"text"}],"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/resume()","interfaceLanguage":"swift"},"metadata":{"role":"symbol","modules":[{"name":"AsyncObjects"}],"roleHeading":"Instance Method","extendedModule":"AsyncObjects","title":"resume()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resume"},{"kind":"text","text":"()"}],"externalID":"s:12AsyncObjects11ContinuablePAAE6resumeyyyt7SuccessRtzrlF","symbolKind":"method"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"resume","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":" == ()","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"A continuation must be resumed at least once."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"After calling this method, control immediately returns to the caller."},{"type":"text","text":" "},{"type":"text","text":"The task continues executing when its executor schedules it."}],"type":"paragraph"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable"]]},"references":{"doc://AsyncObjects/documentation/AsyncObjects":{"title":"AsyncObjects","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects"},"doc://AsyncObjects/documentation/AsyncObjects/Continuable/resume()":{"abstract":[{"type":"text","text":"Resume the task that’s awaiting the continuation by returning."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/resume()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"resume","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/asyncobjects\/continuable\/resume()","kind":"symbol","role":"symbol","title":"resume()","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/Continuable":{"title":"Continuable","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that allows to interface between synchronous and asynchronous code,"},{"type":"text","text":" "},{"type":"text","text":"by representing task state and allowing task resuming with some value or error."}],"navigatorTitle":[{"text":"Continuable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Continuable","kind":"identifier"}],"url":"\/documentation\/asyncobjects\/continuable","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable"}}}