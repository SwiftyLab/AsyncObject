{"sections":[],"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Continuable"}],"externalID":"s:12AsyncObjects11ContinuableP","navigatorTitle":[{"kind":"identifier","text":"Continuable"}],"role":"symbol","modules":[{"name":"AsyncObjects"}],"symbolKind":"protocol","title":"Continuable","roleHeading":"Protocol"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects"]]},"abstract":[{"text":"A type that allows to interface between synchronous and asynchronous code,","type":"text"},{"text":" ","type":"text"},{"text":"by representing task state and allowing task resuming with some value or error.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/continuable"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@rethrows"},{"kind":"text","text":" "},{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Continuable"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Use continuations for interfacing Swift tasks with event loops, delegate methods, callbacks,","type":"text"},{"text":" ","type":"text"},{"text":"and other non-async scheduling mechanisms.","type":"text"}]}]}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/Failure","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/Success"]},{"title":"Instance Methods","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/cancel()-46gpe","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/cancel()-7ca4g","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/resume()","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/resume(returning:)-655td","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/resume(throwing:)-9qp75","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/resume(with:)"]}],"references":{"doc://AsyncObjects/documentation/AsyncObjects/Continuable/resume(throwing:)-9qp75":{"url":"\/documentation\/asyncobjects\/continuable\/resume(throwing:)-9qp75","role":"symbol","required":true,"type":"topic","abstract":[{"type":"text","text":"Resume the task awaiting the continuation by having it throw an error from its suspension point."}],"kind":"symbol","title":"resume(throwing:)","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/resume(throwing:)-9qp75","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"resume"},{"kind":"text","text":"("},{"kind":"externalParam","text":"throwing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":")"}],"defaultImplementations":1},"doc://AsyncObjects/documentation/AsyncObjects/Continuable/resume()":{"abstract":[{"type":"text","text":"Resume the task that’s awaiting the continuation by returning."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/resume()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"resume","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/asyncobjects\/continuable\/resume()","kind":"symbol","role":"symbol","title":"resume()","type":"topic"},"doc://AsyncObjects/documentation/AsyncObjects/Continuable/Success":{"type":"topic","url":"\/documentation\/asyncobjects\/continuable\/success","title":"Success","role":"symbol","kind":"symbol","required":true,"abstract":[{"type":"text","text":"The type of value to resume the continuation with in case of success."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/Success","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Success","kind":"identifier"}]},"doc://AsyncObjects/documentation/AsyncObjects/Continuable/cancel()-46gpe":{"url":"\/documentation\/asyncobjects\/continuable\/cancel()-46gpe","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Cancel continuation by resuming with cancellation error."}],"kind":"symbol","title":"cancel()","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/cancel()-46gpe","conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"()"}]},"doc://AsyncObjects/documentation/AsyncObjects/Continuable/resume(with:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resume"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">)"}],"role":"symbol","url":"\/documentation\/asyncobjects\/continuable\/resume(with:)","type":"topic","kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/resume(with:)","title":"resume(with:)","abstract":[{"text":"Resume the task awaiting the continuation by having it either return normally","type":"text"},{"text":" ","type":"text"},{"text":"or throw an error based on the state of the given ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" value.","type":"text"}],"required":true},"doc://AsyncObjects/documentation/AsyncObjects":{"title":"AsyncObjects","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects"},"doc://AsyncObjects/documentation/AsyncObjects/Continuable/cancel()-7ca4g":{"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/cancel()-7ca4g","abstract":[{"type":"text","text":"Dummy cancellation method for continuations"},{"type":"text","text":" "},{"type":"text","text":"that don’t support cancellation."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"()"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/asyncobjects\/continuable\/cancel()-7ca4g","title":"cancel()"},"doc://AsyncObjects/documentation/AsyncObjects/Continuable/resume(returning:)-655td":{"required":true,"defaultImplementations":1,"title":"resume(returning:)","abstract":[{"type":"text","text":"Resume the task awaiting the continuation by having it return normally from its suspension point."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resume","kind":"identifier"},{"text":"(","kind":"text"},{"text":"returning","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/resume(returning:)-655td","url":"\/documentation\/asyncobjects\/continuable\/resume(returning:)-655td","role":"symbol"},"doc://AsyncObjects/documentation/AsyncObjects/Continuable":{"title":"Continuable","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that allows to interface between synchronous and asynchronous code,"},{"type":"text","text":" "},{"type":"text","text":"by representing task state and allowing task resuming with some value or error."}],"navigatorTitle":[{"text":"Continuable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Continuable","kind":"identifier"}],"url":"\/documentation\/asyncobjects\/continuable","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable"},"doc://AsyncObjects/documentation/AsyncObjects/Continuable/Failure":{"title":"Failure","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The type of error to resume the continuation with in case of failure."}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Failure","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"}],"url":"\/documentation\/asyncobjects\/continuable\/failure","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Continuable\/Failure","required":true}}}