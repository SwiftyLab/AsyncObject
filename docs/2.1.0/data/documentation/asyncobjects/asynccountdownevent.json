{"metadata":{"title":"AsyncCountdownEvent","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncCountdownEvent","kind":"identifier"}],"externalID":"s:12AsyncObjects0A14CountdownEventC","roleHeading":"Class","navigatorTitle":[{"text":"AsyncCountdownEvent","kind":"identifier"}],"role":"symbol","symbolKind":"class","modules":[{"name":"AsyncObjects"}]},"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects"]]},"seeAlsoSections":[{"generated":true,"title":"Synchronization Primitives","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent"]}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","doc:\/\/AsyncObjects\/s23CustomStringConvertibleP","doc:\/\/AsyncObjects\/s8SendableP","doc:\/\/AsyncObjects\/ScA","doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncCountdownEvent","kind":"identifier"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An async countdown event is an inverse of "},{"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"in the sense that instead of restricting access to a resource,"},{"type":"text","text":" "},{"type":"text","text":"it notifies when the resource usage is idle or inefficient."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can indicate high priority usage of resource by using "},{"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/increment(by:file:function:line:)","isActive":true},{"type":"text","text":" "},{"type":"text","text":"method, and indicate free of resource by calling "},{"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(repeat:file:function:line:)","isActive":true},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(file:function:line:)","isActive":true},{"type":"text","text":" methods."},{"type":"text","text":" "},{"type":"text","text":"For low priority resource usage or detect resource idling use "},{"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(file:function:line:)","isActive":true},{"type":"text","text":" "},{"type":"text","text":"method or its timeout variation "},{"type":"reference","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(until:tolerance:clock:file:function:line:)","isActive":true},{"type":"text","text":":"}]},{"type":"codeListing","code":["\/\/ create event with initial count and count down limit","let event = AsyncCountdownEvent()","\/\/ increment countdown count from high priority tasks","event.increment(by: 1)","","\/\/ wait for countdown signal from low priority tasks,","\/\/ fails only if task cancelled","try await event.wait()","\/\/ or wait with some timeout","try await event.wait(forNanoseconds: 1_000_000_000)","","\/\/ signal countdown after completing high priority tasks","event.signal()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/limit","isActive":true,"type":"reference"},{"text":" parameter to indicate concurrent low priority usage, i.e. if limit set to zero,","type":"text"},{"text":" ","type":"text"},{"text":"only one low priority usage allowed at one time.","type":"text"}]}]}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/init(until:initial:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/currentCount","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/initialCount","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/isSet","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/limit"]},{"title":"Instance Methods","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/increment(by:file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/reset(to:file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(repeat:file:function:line:)","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(file:function:line:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/AsyncObject-Implementations","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/CustomStringConvertible-Implementations"],"generated":true}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"An event object that controls access to a resource between high and low priority tasks","type":"text"},{"text":" ","type":"text"},{"text":"and signals when count is within limit.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/asynccountdownevent"]}],"references":{"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/increment(by:file:function:line:)":{"type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/increment(by:file:function:line:)","title":"increment(by:file:function:line:)","role":"symbol","kind":"symbol","abstract":[{"text":"Increments the countdown event current count by the specified value.","type":"text"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/increment(by:file:function:line:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"increment"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/initialCount":{"url":"\/documentation\/asyncobjects\/asynccountdownevent\/initialcount","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"initialCount","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"}],"title":"initialCount","role":"symbol","abstract":[{"type":"text","text":"Initial count of the countdown when count started."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/initialCount"},"doc://AsyncObjects/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/AsyncObjects\/s8SendableP"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent":{"url":"\/documentation\/asyncobjects\/asynccountdownevent","abstract":[{"text":"An event object that controls access to a resource between high and low priority tasks","type":"text"},{"text":" ","type":"text"},{"text":"and signals when count is within limit.","type":"text"}],"type":"topic","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent","navigatorTitle":[{"text":"AsyncCountdownEvent","kind":"identifier"}],"kind":"symbol","title":"AsyncCountdownEvent","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncCountdownEvent","kind":"identifier"}]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/wait(until:tolerance:clock:file:function:line:)":{"abstract":[{"type":"text","text":"Waits for the object to green light task execution within the deadline."}],"type":"topic","kind":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/wait(until:tolerance:clock:file:function:line:)","title":"wait(until:tolerance:clock:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Instant"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tolerance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Instant"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Duration"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"clock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(until:tolerance:clock:file:function:line:)","role":"symbol"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/signal(file:function:line:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"signal(file:function:line:)","url":"\/documentation\/asyncobjects\/asynccountdownevent\/signal(file:function:line:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Registers a signal (decrements) with the countdown event."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/reset(to:file:function:line:)":{"kind":"symbol","title":"reset(to:file:function:line:)","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/reset(to:file:function:line:)","type":"topic","abstract":[{"type":"text","text":"Resets initial count and current count to specified value."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/reset(to:file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects":{"title":"AsyncObjects","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/isSet":{"url":"\/documentation\/asyncobjects\/asynccountdownevent\/isset","type":"topic","abstract":[{"text":"Indicates whether countdown event current count is within ","type":"text"},{"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/limit","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/isSet","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isSet"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"isSet"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/limit":{"url":"\/documentation\/asyncobjects\/asynccountdownevent\/limit","type":"topic","abstract":[{"text":"The limit up to which the countdown counts and triggers event.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/limit","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"limit"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"}],"title":"limit"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/currentCount":{"url":"\/documentation\/asyncobjects\/asynccountdownevent\/currentcount","abstract":[{"text":"Current count of the countdown.","type":"text"}],"type":"topic","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/currentCount","kind":"symbol","title":"currentCount","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"currentCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"}]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/wait(file:function:line:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"wait(file:function:line:)","url":"\/documentation\/asyncobjects\/asynccountdownevent\/wait(file:function:line:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Waits for, or increments, a countdown event."}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/wait(file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/init(until:initial:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"until","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initial","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/init(until:initial:)","type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/init(until:initial:)","abstract":[{"type":"text","text":"Creates new countdown event with the limit count down up to and an initial count."},{"type":"text","text":" "},{"type":"text","text":"By default, both limit and initial count are zero."}],"title":"init(until:initial:)","kind":"symbol","role":"symbol"},"doc://AsyncObjects/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/AsyncObjects\/ScA"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/signal(repeat:file:function:line:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signal"},{"text":"(","kind":"text"},{"text":"repeat","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"title":"signal(repeat:file:function:line:)","url":"\/documentation\/asyncobjects\/asynccountdownevent\/signal(repeat:file:function:line:)","kind":"symbol","role":"symbol","abstract":[{"text":"Registers multiple signals (decrements by provided count) with the countdown event.","type":"text"}],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/signal(repeat:file:function:line:)"},"doc://AsyncObjects/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/AsyncObjects\/s23CustomStringConvertibleP"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/CustomStringConvertible-Implementations":{"type":"topic","url":"\/documentation\/asyncobjects\/asynccountdownevent\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/CustomStringConvertible-Implementations"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/AsyncObject-Implementations":{"abstract":[],"type":"topic","kind":"article","url":"\/documentation\/asyncobjects\/asynccountdownevent\/asyncobject-implementations","title":"AsyncObject Implementations","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/AsyncObject-Implementations","role":"collectionGroup"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncSemaphore":{"url":"\/documentation\/asyncobjects\/asyncsemaphore","type":"topic","navigatorTitle":[{"text":"AsyncSemaphore","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncSemaphore","abstract":[{"text":"An object that controls access to a resource across multiple task contexts through use of a traditional counting semaphore.","type":"text"}],"title":"AsyncSemaphore","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSemaphore","kind":"identifier"}]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncEvent":{"identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncEvent","title":"AsyncEvent","kind":"symbol","navigatorTitle":[{"text":"AsyncEvent","kind":"identifier"}],"abstract":[{"text":"An object that controls execution of tasks depending on the signal state.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncEvent","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/asyncobjects\/asyncevent"},"doc://AsyncObjects/12_Concurrency8AnyActorP":{"type":"unresolvable","title":"_Concurrency.AnyActor","identifier":"doc:\/\/AsyncObjects\/12_Concurrency8AnyActorP"},"doc://AsyncObjects/documentation/AsyncObjects/AsyncObject":{"navigatorTitle":[{"text":"AsyncObject","kind":"identifier"}],"title":"AsyncObject","abstract":[{"type":"text","text":"An object type that can provide synchronization across multiple task contexts"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncObject","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncObject","url":"\/documentation\/asyncobjects\/asyncobject","role":"symbol"}}}