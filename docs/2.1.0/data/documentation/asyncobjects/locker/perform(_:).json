{"hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Locker"]]},"kind":"symbol","metadata":{"title":"perform(_:)","roleHeading":"Instance Method","externalID":"s:12AsyncObjects6LockerC7performyxxyKXEKlF","role":"symbol","modules":[{"name":"AsyncObjects"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"perform"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}],"symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/locker\/perform(_:)"]}],"sections":[],"abstract":[{"type":"text","text":"Performs a critical piece of work synchronously after acquiring the lock"},{"type":"text","text":" "},{"type":"text","text":"and releases lock when task completes."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"perform"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"critical"},{"kind":"text","text":": () "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"R","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"The result from the critical task."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The critical task to perform.","type":"text"}]}],"name":"critical"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this to perform critical tasks or provide access to critical resource"},{"type":"text","text":" "},{"type":"text","text":"that require exclusivity among other concurrent tasks."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method checks if thread has already acquired lock and performs task"},{"type":"text","text":" "},{"type":"text","text":"without releasing the lock. This allows safer lock management eliminating"},{"type":"text","text":" "},{"type":"text","text":"potential runtime errors."}]},{"name":"Throws","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"Error occurred running critical task."}],"type":"paragraph"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Locker\/perform(_:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://AsyncObjects/documentation/AsyncObjects/Locker":{"title":"Locker","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A synchronization object that can be used to provide exclusive access to threads."}],"navigatorTitle":[{"text":"Locker","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Locker","kind":"identifier"}],"url":"\/documentation\/asyncobjects\/locker","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Locker"},"doc://AsyncObjects/documentation/AsyncObjects/Locker/perform(_:)":{"url":"\/documentation\/asyncobjects\/locker\/perform(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Performs a critical piece of work synchronously after acquiring the lock"},{"type":"text","text":" "},{"text":"and releases lock when task completes.","type":"text"}],"kind":"symbol","title":"perform(_:)","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/Locker\/perform(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"perform"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"R"}]},"doc://AsyncObjects/documentation/AsyncObjects":{"title":"AsyncObjects","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects"}}}