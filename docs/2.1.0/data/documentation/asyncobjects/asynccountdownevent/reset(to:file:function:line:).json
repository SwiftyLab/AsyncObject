{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#fileID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#function"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"name":"count","content":[{"type":"paragraph","inlineContent":[{"text":"The new initial count.","type":"text"}]}]},{"name":"file","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The file reset originates from (there’s usually no need to pass it"},{"type":"text","text":" "},{"type":"text","text":"explicitly as it defaults to "},{"code":"#fileID","type":"codeVoice"},{"type":"text","text":")."}]}]},{"name":"function","content":[{"inlineContent":[{"type":"text","text":"The function reset originates from (there’s usually no need to"},{"type":"text","text":" "},{"type":"text","text":"pass it explicitly as it defaults to "},{"type":"codeVoice","code":"#function"},{"type":"text","text":")."}],"type":"paragraph"}]},{"name":"line","content":[{"type":"paragraph","inlineContent":[{"text":"The line reset originates from (there’s usually no need to pass it","type":"text"},{"text":" ","type":"text"},{"text":"explicitly as it defaults to ","type":"text"},{"type":"codeVoice","code":"#line"},{"text":").","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"If the current count becomes less or equal to limit, multiple queued tasks"},{"type":"text","text":" "},{"type":"text","text":"are resumed from suspension until current count exceeds limit."}],"type":"paragraph"}]}],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"AsyncObjects"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":"?, "},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:12AsyncObjects0A14CountdownEventC5reset2to4file8function4lineySuSg_S2SSutF","role":"symbol","title":"reset(to:file:function:line:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/AsyncObjects\/documentation\/AsyncObjects","doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent"]]},"identifier":{"url":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/reset(to:file:function:line:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Resets initial count and current count to specified value.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asyncobjects\/asynccountdownevent\/reset(to:file:function:line:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent":{"url":"\/documentation\/asyncobjects\/asynccountdownevent","abstract":[{"text":"An event object that controls access to a resource between high and low priority tasks","type":"text"},{"text":" ","type":"text"},{"text":"and signals when count is within limit.","type":"text"}],"type":"topic","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent","navigatorTitle":[{"text":"AsyncCountdownEvent","kind":"identifier"}],"kind":"symbol","title":"AsyncCountdownEvent","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncCountdownEvent","kind":"identifier"}]},"doc://AsyncObjects/documentation/AsyncObjects/AsyncCountdownEvent/reset(to:file:function:line:)":{"kind":"symbol","title":"reset(to:file:function:line:)","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects\/AsyncCountdownEvent\/reset(to:file:function:line:)","type":"topic","abstract":[{"type":"text","text":"Resets initial count and current count to specified value."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/asyncobjects\/asynccountdownevent\/reset(to:file:function:line:)"},"doc://AsyncObjects/documentation/AsyncObjects":{"title":"AsyncObjects","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Several synchronization primitives and task synchronization mechanisms introduced to aid in modern swift concurrency."}],"url":"\/documentation\/asyncobjects","identifier":"doc:\/\/AsyncObjects\/documentation\/AsyncObjects"}}}